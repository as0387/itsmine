{"version":3,"sources":["config/constants.js","main/index.js","picturesWall/index.js","upload/index.js","auctionupload/index.js","auction/normal/bidPage.js","comments/index.js","product/index.js","store.js","login/index.js","register/index.js","mypage/index.js","mypageUpdate/index.js","kakaomap/kakao.js","myproduct/index.js","updateForm/index.js","chat/index.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","dayjs","extend","relativeTime","MainPage","React","useState","products","setProducts","useEffect","axios","get","then","result","console","log","contents","data","content","catch","error","autoplay","autoplaySpeed","map","banner","index","id","src","product","className","soldout","to","photos","imageUrl","title","type","price","bid","user","nickname","createDate","fromNow","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","state","previewVisible","previewImage","previewTitle","fileList","fileIds","handleCancel","setState","handlePreview","a","url","preview","originFileObj","name","substring","lastIndexOf","handleChange","info","onChangeImage","status","response","onFormSubmit","e","props","getTextValue","this","uploadButton","PlusOutlined","style","marginTop","action","listType","onPreview","onChange","length","visible","footer","onCancel","alt","width","Component","fileIdList","Select","Option","UploadPage","config","headers","Authorization","localStorage","getItem","history","useHistory","setFileIds","onFinish","values","formData","FormData","data1","description","data2","JSON","stringify","append","Blob","post","replace","message","Item","label","fileId","push","rules","required","size","placeholder","defaultValue","TextArea","showCount","maxLength","htmlType","priceTest","bidLimitTest","value","parseInt","AuctionUpload","limtCheck","useCallback","_","limitPrice","Error","endTime","minBidUnit","bidLimit","validator","Countdown","Statistic","App","isModalVisible","setIsModalVisible","useParams","userId","timerSet","deadline","Date","getTime","handleOk","format","bidder","valueStyle","fontSize","danger","onClick","bodyStyle","color","onOk","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","put","bidderId","success","paddingTop","marginLeft","float","marginRight","primary","top","Input","CommentList","comments","header","itemLayout","Editor","onSubmit","submitting","rows","loading","postComments","postId","handleSubmit","setTimeout","author","avatar","profileImageUrl","deleteComment","datetime","moment","target","ProductPage","setuserId","setProduct","setUser","jwtTokenTemp","jwtToken","jwt_decode","replys","reply","reverse","id2","delete","window","location","reload","Carousel","fade","photo","height","alert","createdAt","userId1","userId2","disabled","LOGIN","login","LOGOUT","initstate","isLogin","reducer","LoginPage","dispatch","useDispatch","responseGoogle","res","setItem","responseKakao","initialValues","remember","username","password","authorization","prefix","UserOutlined","LockOutlined","clientId","onSuccess","onFailure","cookiePolicy","token","onFail","getProfile","render","preventDefault","formItemLayout","labelCol","span","wrapperCol","tailFormItemLayout","offset","RegistrationForm","Form","useForm","form","validatePassword","test","email","confirm","phone","residence","scrollToFirstError","whitespace","hasFeedback","Password","dependencies","getFieldValue","tooltip","Meta","Card","MyPage","percent","setPercent","alignItems","actions","EditOutlined","EllipsisOutlined","startsWith","strokeColor","MyPageupdateForm","setImageUrl","showUploadList","Kakaomap","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","Map","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","displayMarker","locPosition","marker","Marker","iwContent","InfoWindow","removable","open","setCenter","Myproduct","UpdateForm","chatroomid","opponentUserName","sender","space","imageUrl2","setImageUrl2","stompClient","connect","disconnect","socket","SockJS","Stomp","over","subscribe","receivedBox","createElement","innerHTML","scrollTop","scrollHeight","showMessageLeft","parse","body","onClickPurchase","chatRoomId","receiver","send","showMessageRight","onbeforeunload","ChatPage","chats","setChat","messages","setMessages","chatRoom","a1","Number","getAttribute","a2","a3","div","querySelector","removeChild","objDiv","class","chat","data-msg1","data-msg2","data-msg3","msg","writer","useSelector","store","menu","icon","SkinOutlined","HeartOutlined","LaptopOutlined","CameraOutlined","ThunderboltOutlined","CarOutlined","menu2","menu3","offsetTop","overlay","placement","arrow","removeItem","DownOutlined","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","ReactDOM","StrictMode","basename","process"],"mappings":"8lBAAaA,EAEP,2B,gBCONC,IAAMC,OAAOC,KAkFEC,MAhFf,WAAqB,IAAD,EACcC,IAAMC,SAAS,IAD7B,mBACXC,EADW,KACDC,EADC,KAqBlB,OAbAH,IAAMI,WAAU,WACdC,IACGC,IADH,UACUX,EADV,cAEGY,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAMG,EAAWH,EAAOI,KAAKC,QAC7BV,EAAYQ,MAEbG,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,QAE3B,IAGD,gCACE,cAAC,IAAD,CAAUC,UAAQ,EAACC,cAAe,IAAlC,SArBY,CACd,eACA,eACA,eACA,gBAkBaC,KAAI,SAACC,EAAQC,GACpB,OACE,qBAAKC,GAAG,SAAR,SACE,qBAAKC,IAA8B,WAAaH,WAKxD,oBAAIE,GAAG,mBAAP,sCACA,qBAAKA,GAAG,eAAR,SACGnB,EAASgB,KAAI,SAAUK,EAASH,GAC/B,OACE,sBAAKI,UAAU,eAAf,UACuB,IAApBD,EAAQE,SAAiB,qBAAKD,UAAU,iBACzC,eAAC,IAAD,CAAMA,UAAU,eAAeE,GAAE,oBAAeH,EAAQF,IAAxD,UACE,8BACE,qBACEG,UAAU,cACVF,IAAG,UAAK3B,GAAL,OAAe4B,EAAQI,OAAO,GAAGC,cAGxC,sBAAKJ,UAAU,mBAAf,UACE,sBAAMA,UAAU,eAAhB,SACE,+BAAOD,EAAQM,UAEjB,sBAAML,UAAU,gBAAhB,SACoB,IAAjBD,EAAQO,KACP,iCAAOP,EAAQQ,MAAf,YAEA,iCAAOR,EAAQS,IAAf,cAGJ,sBAAKR,UAAU,iBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBACEA,UAAU,iBACVF,IAC2B,6BAG7B,+BAAOC,EAAQU,KAAKC,cAEtB,sBAAMV,UAAU,eAAhB,SACG5B,IAAM2B,EAAQY,YAAYC,iC,yKCxEjD,SAASC,EAAUC,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOlC,SACrCkC,EAAOI,QAAU,SAAC/B,GAAD,OAAW0B,EAAO1B,O,IAmFxBgC,E,4MA9EbC,MAAQ,CACNC,gBAAgB,EAChBC,aAAc,GACdC,aAAc,GACdC,SAAU,I,EAEZC,QAAU,G,EAEVC,aAAe,kBAAM,EAAKC,SAAS,CAAEN,gBAAgB,K,EAErDO,c,uCAAgB,WAAOlB,GAAP,SAAAmB,EAAA,yDACTnB,EAAKoB,KAAQpB,EAAKqB,QADT,gCAEStB,EAAUC,EAAKsB,eAFxB,OAEZtB,EAAKqB,QAFO,cAKd,EAAKJ,SAAS,CACZL,aAAcZ,EAAKoB,KAAOpB,EAAKqB,QAC/BV,gBAAgB,EAChBE,aACEb,EAAKuB,MAAQvB,EAAKoB,IAAII,UAAUxB,EAAKoB,IAAIK,YAAY,KAAO,KATlD,2C,wDAahBC,aAAe,SAACC,GACdxD,QAAQC,IAAIuD,GACZ,IAAIb,EAAWa,EAAKb,SACpB,EAAKG,SAAS,CAAEH,aAChB,EAAKc,cAAcD,I,EAErBC,cAAgB,SAACD,GAEf,GADAxD,QAAQC,IAAIuD,EAAK3B,KAAK6B,QACG,cAArBF,EAAK3B,KAAK6B,QAGW,SAArBF,EAAK3B,KAAK6B,OAAmB,CAC/B,IAAMvC,EAAWqC,EAAK3B,KAAK8B,SAC3B,EAAKC,aAAazC,K,EAItByC,aAAe,SAACC,GACd,EAAKC,MAAMC,aAAaF,I,4CAG1B,WAAU,IAAD,EAC0DG,KAAKzB,MAA9DC,EADD,EACCA,eAAgBC,EADjB,EACiBA,aAAcE,EAD/B,EAC+BA,SAAUD,EADzC,EACyCA,aAC1CuB,EACJ,gCACE,cAACC,EAAA,EAAD,IACA,qBAAKC,MAAO,CAAEC,UAAW,GAAzB,uBAIJ,OACE,qCACE,cAAC,IAAD,CACEhB,KAAK,QACLiB,OAAM,UAAKnF,EAAL,UACNoF,SAAS,eACT3B,SAAUA,EACV4B,UAAWP,KAAKjB,cAChByB,SAAUR,KAAKT,aANjB,SAQGZ,EAAS8B,QAAU,EAAI,KAAOR,IAEjC,cAAC,IAAD,CACES,QAASlC,EACTpB,MAAOsB,EACPiC,OAAQ,KACRC,SAAUZ,KAAKnB,aAJjB,SAME,qBAAKgC,IAAI,UAAUV,MAAO,CAAEW,MAAO,QAAUjE,IAAK4B,a,GAxEjClD,IAAMwF,WCG7BC,GADeC,IAAXC,OACS,IAyHFC,MAvHf,WACE,IAAMC,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBAG3CC,EAAUC,cALI,EAMUlG,mBAAS,IANnB,mBAMboD,EANa,KAMJ+C,EANI,KA8DpB,OACE,qBAAK/E,GAAG,mBAAR,SACE,eAAC,IAAD,CAAMwC,KAAK,kCAASwC,SAnDP,SAACC,GAChB,IAAMC,EAAW,IAAIC,SACfC,EAAQ,CACZ5E,MAAOyE,EAAOzE,MACd6E,YAAaJ,EAAOI,YACpB3E,MAAOuE,EAAOvE,MACdD,KAAM,GAEF6E,EAAQ,CACZlB,WAAYpC,GAEd5C,QAAQC,IAAIkG,KAAKC,UAAUF,IAC3BJ,EAASO,OACP,QACA,IAAIC,KAAK,CAACH,KAAKC,UAAUJ,IAAS,CAAE3E,KAAM,sBAE5CyE,EAASO,OACP,QACA,IAAIC,KAAK,CAACH,KAAKC,UAAUF,IAAS,CAAE7E,KAAM,sBAE5CrB,QAAQC,IAAI6F,EAASjG,KACrBD,IACG2G,KADH,UACWrH,EADX,qBACuC4G,EAAUV,GAC9CtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ0F,EAAQe,QAAQ,QAEjBnG,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cAsBrC,UACE,cAAC,IAAKC,KAAN,CACEtD,KAAK,SACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCAFT,SAIE,cAAC,EAAD,CAAcgD,aA7DD,SAAC6C,GACpB5B,EAAW6B,KAAKD,GAChBjB,EAAWX,QA6DP,cAAC,IAAD,IACA,cAAC,IAAK0B,KAAN,CACEtD,KAAK,QACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,0EAHrC,SAKE,cAAC,IAAD,CACE1F,UAAU,cACViG,KAAK,QACLC,YAAY,4EAGhB,cAAC,IAAD,IACA,cAAC,IAAKP,KAAN,CACEtD,KAAK,QACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,yEAHrC,SAKE,cAAC,IAAD,CACE1F,UAAU,eACViG,KAAK,QACLE,aAAc,MAGlB,cAAC,IAAD,IACA,cAAC,IAAKR,KAAN,CACEtD,KAAK,cACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,0EAHrC,SAKE,cAAC,IAAMU,SAAP,CACEH,KAAK,QACLpG,GAAG,sBACHwG,WAAS,EACTC,UAAW,IACXJ,YAAY,sEAGhB,cAAC,IAAKP,KAAN,UACE,cAAC,IAAD,CAAQ9F,GAAG,gBAAgBoG,KAAK,QAAQM,UAAQ,EAAhD,qDClHFpC,G,OAAWD,IAAXC,QACJF,EAAa,GACbuC,EAAY,EACZC,EAAe,EAEnB,SAASjE,EAAakE,GACpBzH,QAAQC,IAAIwH,GACZD,EAAeE,SAASD,GAwLXE,MArLf,WACE,IAAMvC,EAAS,CACbC,QAAS,CACP,eAAgB,sBAChBC,cAAeC,aAAaC,QAAQ,mBAJjB,EAOOhG,mBAAS,IAPhB,mBAOhBoD,EAPgB,KAOP+C,EAPO,KASjBF,EAAUC,cAEVkC,EAAYC,uBAAY,SAACC,EAAGL,GAChC,IAAIM,EAAaL,SAASD,GAC1B,OAAIM,GAAcR,EAAYC,EACrB1F,QAAQE,OACb,IAAIgG,MACF,mLAIFD,EAAaP,GAAgB,EACxB1F,QAAQE,OACb,IAAIgG,MAAM,6JAGPlG,QAAQC,YACd,IAiDH,OACE,qBAAKnB,GAAG,mBAAR,SACE,eAAC,IAAD,CAAMwC,KAAK,kCAASwC,SAvCP,SAACC,GAChB,IAAMC,EAAW,IAAIC,SACfC,EAAQ,CACZ5E,MAAOyE,EAAOzE,MACd6E,YAAaJ,EAAOI,YACpBgC,QAASP,SAAS7B,EAAOoC,SACzB1G,IAAKmG,SAAS7B,EAAOtE,KACrB2G,WAAYR,SAAS7B,EAAOqC,YAC5BC,SAAUT,SAAS7B,EAAOsC,UAC1B9G,KAAM,GAEF6E,EAAQ,CACZlB,WAAYpC,GAEd5C,QAAQC,IAAIkG,KAAKC,UAAUF,IAC3BJ,EAASO,OACP,QACA,IAAIC,KAAK,CAACH,KAAKC,UAAUJ,IAAS,CAAE3E,KAAM,sBAE5CyE,EAASO,OACP,QACA,IAAIC,KAAK,CAACH,KAAKC,UAAUF,IAAS,CAAE7E,KAAM,sBAE5CrB,QAAQC,IAAI6F,EAASjG,KAErBD,IACG2G,KADH,UACWrH,EADX,qBACuC4G,EAAUV,GAC9CtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ0F,EAAQe,QAAQ,QAEjBnG,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cAMrC,UACE,cAAC,IAAKC,KAAN,CACEtD,KAAK,SACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCAFT,SAIE,cAAC,EAAD,CAAcgD,aAjDD,SAAC6C,GACpB5B,EAAW6B,KAAKD,GAChBjB,EAAWX,QAiDP,cAAC,IAAD,IACA,cAAC,IAAK0B,KAAN,CACEtD,KAAK,QACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,0EAHrC,SAKE,cAAC,IAAD,CACE1F,UAAU,cACViG,KAAK,QACLC,YAAY,4EAGhB,cAAC,IAAD,IACA,cAAC,IAAKP,KAAN,CACEtD,KAAK,UACLuD,MAAO,qBAAK5F,UAAU,eAAf,kDAFT,SAIE,eAAC,IAAD,CAAQoD,MAAO,CAAEW,MAAO,KAAON,SAAUjB,EAAzC,UACE,cAAC,EAAD,CAAQkE,MAAM,IAAd,2BACA,cAAC,EAAD,CAAQA,MAAM,IAAd,2BACA,cAAC,EAAD,CAAQA,MAAM,IAAd,gCAGJ,cAAC,IAAKf,KAAN,CACEtD,KAAK,MACLuD,MAAO,qBAAK5F,UAAU,eAAf,4CACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,+EAHrC,SAKE,cAAC,IAAD,CACE1F,UAAU,eACViG,KAAK,QACLxC,SAvFV,SAAqBiD,GAEnB,IAAK,IAAIzE,KADThD,QAAQC,IAAIwH,GACE7E,EAAS5C,QAAQC,IAAI+C,GACnCuE,EAAYE,GAqFJP,aAAc,MAGlB,cAAC,IAAKR,KAAN,CACEtD,KAAK,aACLuD,MACE,qBAAK5F,UAAU,eAAeH,GAAG,gBAAjC,oDAHJ,SAQE,eAAC,IAAD,CACEuD,MAAO,CAAEW,MAAO,KAChBN,SAAUjB,EACVuD,MAAO,CACL,CAAEC,UAAU,EAAMN,QAAS,sFAJ/B,UAOE,cAAC,EAAD,CAAQgB,MAAM,MAAd,uBACA,cAAC,EAAD,CAAQA,MAAM,OAAd,wBACA,cAAC,EAAD,CAAQA,MAAM,OAAd,wBACA,cAAC,EAAD,CAAQA,MAAM,QAAd,8BAGJ,cAAC,IAAKf,KAAN,CACEtD,KAAK,WACLuD,MAAO,qBAAK5F,UAAU,eAAf,gCACP+F,MAAO,CACL,CAAEC,UAAU,EAAMN,QAAS,iEAC3B,CACE2B,UAAWR,IANjB,SAUE,cAAC,IAAD,CACE7G,UAAU,eACViG,KAAK,QACLE,aAAc,MAGlB,cAAC,IAAD,IACA,cAAC,IAAKR,KAAN,CACEtD,KAAK,cACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,0EAHrC,SAKE,cAAC,IAAMU,SAAP,CACEH,KAAK,QACLpG,GAAG,sBACHwG,WAAS,EACTC,UAAW,IACXJ,YAAY,gIACZ9C,MAAO,CAAEW,MAAO,SAGpB,cAAC,IAAK4B,KAAN,UACE,cAAC,IAAD,CAAQ9F,GAAG,gBAAgBoG,KAAK,QAAQM,UAAQ,EAAhD,qD,+DC7LFe,G,OAAcC,IAAdD,WAuMOE,GArMH,SAACzE,GACX,IAAMsB,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBAF5B,EAIuBhG,oBAAS,GAJhC,mBAIdgJ,EAJc,KAIEC,EAJF,KAKb7H,EAAO8H,cAAP9H,GACF+H,EAAS7E,EAAM6E,OACf7H,EAAUgD,EAAMhD,QAChB2E,EAAUC,cAEZkD,EAAW9H,EAAQY,WACjBmH,EACJ,IAAIC,KAAKF,GAAUG,UAAY,MAAsBjI,EAAQmH,QAM/D,IAKMe,EAAW,WACfP,GAAkB,IAedtI,EAAO,CACX,CACEiB,MAAO,qBACPhB,QAASU,EAAQM,OAEnB,CACEA,MAAO,kCACPhB,QAASjB,IAAM2B,EAAQY,YAAYuH,OAAO,iCAE5C,CACE7H,MAAO,2BACPhB,QAASU,EAAQU,KAAKC,UAExB,CACEL,MAAO,4BACPhB,QAAS,gBAEX,CACEgB,MAAO,2DACPhB,QAAQ,GAAD,OAAKU,EAAQS,IAAb,oBA1Ba,MAAlBT,EAAQoI,OACH,kCAEIpI,EAAQoI,OAAOzH,WAyB5B,CACEL,MAAO,mGACPhB,QAAQ,GAAD,OAAKU,EAAQqH,SAAb,oBAA4BrH,EAAQoH,cAoC/C,OACE,qCACE,cAAC,IAAD,IACA,cAACG,EAAD,CACEjH,MAAM,4BACNqG,MAAOoB,EACPM,WAAY,CAAEC,SAAU,IACxBxD,SA3FN,WACE5F,QAAQC,IAAI,cA2FRgJ,OAAO,uBAET,cAAC,IAAD,IACA,cAAC,IAAD,CACErI,GAAG,cACHoG,KAAK,QACL3F,KAAK,UACLgI,QAAM,EACN/B,UAAQ,EACRgC,QAjGY,WAChBtJ,QAAQC,IAAI6D,GACZ2E,GAAkB,IAyFhB,sCAUA,eAAC,IAAD,CACEc,UAAW,CAAEC,MAAO,UAAWJ,SAAU,IACzChI,MAAM,4BACN0D,MAAO,KACPJ,QAAS8D,EACTiB,KAAMT,EACNpE,SAlGe,WACnB6D,GAAkB,IAkGd9D,OAAQ,GAPV,+DAUE,cAAC,IAAD,CACER,MAAO,CAAEC,UAAW,IACpBsF,KAAM,CACJC,OAAQ,GACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPC,WAAY/J,EACZgK,WAAY,SAACC,GAAD,OACV,cAAC,IAAK1D,KAAN,UACE,cAAC,IAAD,CAAMtF,MAAOgJ,EAAKhJ,MAAO+C,MAAO,CAAEiF,SAAU,IAA5C,SACGgB,EAAKhK,eAzBhB,qDA+BE,eAAC,IAAD,CAAMwF,SArFI,SAACC,GACX/E,EAAQS,IAAMmG,SAAS7B,EAAOtE,KAChCkF,IAAQnG,MAAR,oGAC2B,MAAlBQ,EAAQoI,OACbpI,EAAQoI,OAAOtI,KAAO+H,GACxBlC,IAAQnG,MAAR,iEACOQ,EAAQU,KAAKZ,KAAO+H,EAC7BlC,IAAQnG,MAAR,wGAEAV,IACGyK,IADH,UAEOnL,EAFP,oBAE0B0B,GACtB,CACEQ,MAAON,EAAQM,MACf6E,YAAanF,EAAQmF,YACrB1E,IAAKmG,SAAS7B,EAAOtE,KACrB+I,SAAU3B,EACVxH,SAAUL,EAAQK,UAEpBiE,GAEDtF,MAAK,SAACC,GACL0G,IAAQ8D,QAAQ,+CAChB9E,EAAQe,QAAR,oBAA6B5F,IAC7BoI,OAED3I,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cAyDZtC,MAAO,CAAEqG,WAAY,IAA9C,UACE,cAAC,IAAK9D,KAAN,CACEtD,KAAK,MACLuD,MAAO,qBAAK5F,UAAU,eAAf,8CACP+F,MAAO,CACL,CAAEC,UAAU,EAAMN,QAAS,oFAC3B,CACEM,SAAU,aACVN,QAAS,sGAGbtC,MAAO,CAAEsG,WAAY,GAAIC,MAAO,QAVlC,SAYE,cAAC,IAAD,CACE3J,UAAU,eACViG,KAAK,QACLE,aAAc,EACd/C,MAAO,CAAEW,MAAO,IAAK6F,YAAa,GAAIF,WAAY,QAGtD,cAAC,IAAD,CACE7J,GAAG,cACHoG,KAAK,QACL3F,KAAK,UACLuJ,SAAO,EACPtD,UAAQ,EACRnD,MAAO,CAAEwG,YAAa,GAAIF,WAAY,GAAIC,MAAO,QANnD,0CAWF,cAAC,IAAD,CACE9J,GAAG,cACHoG,KAAK,QACL3F,KAAK,UACLgI,QAAM,EACN/B,UAAQ,EACRgC,QAAQ,GACRnF,MAAO,CAAE0G,KAAM,EAAGJ,WAAY,IAPhC,8C,qECxLAtD,GAAa2D,IAAb3D,SAEF4D,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,cAAC,IAAD,CACEd,WAAYc,EACZC,OAAM,UAAKD,EAASvG,OAAd,YAAwBuG,EAASvG,OAAS,EAAI,UAAY,SAChEyG,WAAW,aACXf,WAAY,SAACrG,GAAD,OAAW,cAAC,KAAD,gBAAaA,QAIlCqH,GAAS,SAAC,GAAD,IAAG3G,EAAH,EAAGA,SAAU4G,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,WAAY5D,EAAnC,EAAmCA,MAAnC,OACb,qCACE,cAAC,IAAKf,KAAN,UACE,cAACS,GAAD,CAAUmE,KAAM,EAAG9G,SAAUA,EAAUiD,MAAOA,MAEhD,cAAC,IAAKf,KAAN,UACE,cAAC,IAAD,CACEY,SAAS,SACTiE,QAASF,EACT/B,QAAS8B,EACT/J,KAAK,UAJP,6CAwBA+D,GAAS,CACXC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBA8FpC+C,G,4MA1FbhG,MAAQ,CACNyI,SAAU,EAAKlH,MAAMkH,SACrBK,YAAY,EACZ5D,MAAO,I,EAIT+D,aAAe,WACb5L,IACG2G,KADH,UAEOrH,EAFP,oBAE0B,EAAK4E,MAAMlD,GAFrC,UAGI,CACE6K,OAAQ,EAAK3H,MAAMlD,GACnB+H,OAAQ,EAAK7E,MAAMtC,KAAKZ,GACxBR,QAAQ,EAAKmC,MAAMkF,OAErBrC,IAEDtF,MAAK,SAACC,GACLC,QAAQC,IAAI,0CACZD,QAAQC,IAAIF,MAEbM,OAAM,SAACC,GACNN,QAAQC,IAAI,iCACZD,QAAQM,MAAMA,O,EAKpBoL,aAAe,WACb1L,QAAQC,IAAI,EAAK6D,OACjB,EAAK0H,eACL,EAAK1I,SAAS,CACZuI,YAAY,IAGdM,YAAW,WAET,EAAK7I,SAAS,CACZuI,YAAY,EACZ5D,MAAO,GACPuD,SAAS,GAAD,oBACH,EAAKzI,MAAMyI,UADR,CAEN,CACEY,OAAQ,EAAK9H,MAAMtC,KAAKC,SACxBoK,OAAO,GAAD,OAAyC,8BAApC,EAAK/H,MAAMtC,KAAKsK,gBAAhB,UAAqE5M,EAArE,6BAA0G,EAAK4E,MAAMtC,KAAKsK,iBACrI1L,QAAS,8BAAI,EAAKmC,MAAMkF,MAAO,cAAC,IAAD,CAAQ6B,QAAS,kBAAM,EAAKxF,MAAMiI,cAAc,EAAKnL,KAArD,6BAC/BoL,SAAUC,OAAStK,iBAIxB,M,EAGL4B,aAAe,SAACM,GACd,EAAKf,SAAS,CACZ2E,MAAO5D,EAAEqI,OAAOzE,S,4CAMpB,WAAU,IAAD,EACiCzD,KAAKzB,MAArCyI,EADD,EACCA,SAAUK,EADX,EACWA,WAAY5D,EADvB,EACuBA,MAC9B,OACE,qCAEGuD,EAASvG,OAAS,GAAK,cAAC,GAAD,CAAauG,SAAUA,IAC/C,cAAC,KAAD,CAEEa,OACE,cAAC,KAAD,CACEhL,IAA0C,8BAApCmD,KAAKF,MAAMtC,KAAKsK,gBAAhB,UAAqE5M,EAArE,6BAA0G8E,KAAKF,MAAMtC,KAAKsK,gBAChIjH,IAAI,aAGRzE,QACE,cAAC,GAAD,CACEoE,SAAUR,KAAKT,aACf6H,SAAUpH,KAAK0H,aACfL,WAAYA,EACZ5D,MAAOA,a,GAlFHlI,IAAMwF,W,0BCkMToH,OAvOf,WACE,IAAM/G,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBAEzC5E,EAAO8H,cAAP9H,GAJa,EAKOpB,qBALP,mBAKdmJ,EALc,KAKNyD,EALM,OAMS5M,mBAAS,MANlB,mBAMdsB,EANc,KAMLuL,EANK,OAOG7M,mBAAS,MAPZ,mBAOdgC,EAPc,KAOR8K,EAPQ,KAQf7G,EAAUC,cAqDhB,GA1BA/F,qBACE,WACE,IAAI4M,EAAehH,aAAaC,QAAQ,iBAExC,GAAqB,OAAjB+G,EACF9F,IAAQnG,MAAM,yEACdmF,EAAQoB,KAAK,cACR,CACL,IAAI2F,EAAWD,EAAa/F,QAAQ,UAAW,IAhCnD5G,IACGC,IADH,UACUX,EADV,qBAC8B0B,GAAMwE,GACjCtF,MAAK,SAACC,GACLsM,EAAWtM,EAAOI,MAClBH,QAAQC,IAAIF,EAAOI,SAEpBE,OAAM,SAACC,GACNN,QAAQM,MAAM,gBAAOA,MA2BrB8L,EAAUK,YAAWD,GAAU5L,IAGjChB,IACGC,IADH,UACUX,EADV,cAC+BkG,GAC5BtF,MAAK,SAACC,GAELuM,EAAQvM,EAAOI,SAEhBE,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,QAG9B,CAACM,EAAIE,IAGS,OAAZA,GAA6B,OAATU,EACtB,OACE,qBAAKZ,GAAG,YAAR,SACE,eAAC,IAAD,CAAOoG,KAAK,SAAZ,UACE,cAAC,IAAD,CAAMA,KAAK,UACX,cAAC,IAAD,IACA,cAAC,IAAD,CAAMA,KAAK,eAMnB,IAAMgE,EAAWlK,EAAQ4L,OAAOjM,KAAI,SAACkM,GACnC,MAAO,CACLf,OAAQe,EAAMnL,KAAKC,SACnBoK,OACiC,8BAA/Bc,EAAMnL,KAAKsK,gBAAX,UACO5M,EADP,6BAEIyN,EAAMnL,KAAKsK,gBACjB1L,QACE,8BACGuM,EAAMvM,QACNuI,IAAWgE,EAAMnL,KAAKZ,GACrB,cAAC,IAAD,CAAQ0I,QAAS,kBAAMyC,EAAcY,EAAM/L,KAA3C,0BAEA,MAINoL,SAAU7M,IAAMwN,EAAMjL,YAAYC,cAItCqJ,EAAS4B,UAET,IAAMb,EAAgB,SAACc,GACrBjN,IACGkN,OADH,UACa5N,EADb,oBACgC0B,EADhC,kBAC4CiM,GAAOzH,GAChDtF,MAAK,SAACC,GACL0G,IAAQjD,KAAK,6BACbuJ,OAAOC,SAASC,YAEjB5M,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cAqBzC,OACE,gCACE,cAACyG,GAAA,EAAD,CAAUtM,GAAG,WAAWuM,MAAI,EAA5B,SACGrM,EAAQI,OAAOT,KAAI,SAAC2M,GACnB,OACE,cAACF,GAAA,EAASxG,KAAV,UACE,qBACE2G,OAAO,QACPtM,UAAU,gBACVF,IAAK3B,EAAUkO,EAAMjM,SACrB0D,IAAI,uBAOd,sBAAKjE,GAAG,cAAR,UACE,gCACE,qBAAKC,IAA8B,6BACnC,+BAAOC,EAAQU,KAAKC,cAErBX,EAAQU,KAAKZ,KAAO+H,EACnB,sBAAK/H,GAAG,gBAAR,UACE,cAAC,IAAD,CAAMK,GAAI,eAAiBH,EAAQF,GAAnC,SACE,cAAC,IAAD,CAAQA,GAAG,iBAAiBoG,KAAK,SAAS3F,KAAK,UAA/C,4BAKF,cAAC,IAAD,CACE2F,KAAK,SACL3F,KAAK,UACLgI,QAAM,EACNC,QAAS,kBAAiBxI,EAAQF,QAzI5ChB,IACGkN,OADH,UACa5N,EADb,iBAC6B0B,GAAMwE,GAChCtF,MAAK,SAACC,GACLuN,MAAM,4BACN7H,EAAQoB,KAAK,QAEdxG,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cA6H/B,6BAUF,MAIJ,qBAAK7F,GAAG,eAAR,SACE,gCACE,qBAAKA,GAAG,OAAR,SAAgBE,EAAQM,QACN,IAAjBN,EAAQO,KACP,sBAAKT,GAAG,QAAR,UAAiBE,EAAQQ,MAAzB,YAEA,sBAAKV,GAAG,QAAR,UAAiBE,EAAQS,IAAzB,YAEF,qBAAKX,GAAG,YAAR,SACGzB,IAAM2B,EAAQyM,WAAWtE,OAAO,kCAEjB,IAAjBnI,EAAQO,KACP,8BACE,8BACE,qBAAKT,GAAG,iBAAR,SACE,cAAC,GAAD,CAASE,QAASA,EAAS6H,OAAQA,UAKzC,8BACE,8BACE,cAAC,IAAD,CACE/H,GAAG,kBACHoG,KAAK,QACL3F,KAAK,UACLgI,QAAM,EACNC,QAxFQ,WACtB1J,IACG2G,KADH,UAEOrH,EAFP,iBAGI,CAAEsO,QAAS7E,EAAQ8E,QAAS3M,EAAQU,KAAKZ,IACzCwE,GAEDtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAOI,MACnBsF,EAAQe,QAAR,oBAA6BzG,EAAOI,UAErCE,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cA4EzBiH,SAA8B,IAApB5M,EAAQE,QANpB,6DAaN,uBACA,uBACA,qBAAKJ,GAAG,QAAR,uCACA,qBAAKA,GAAG,cAAR,SAAuBE,EAAQmF,mBAYnC,cAAC,GAAD,CACEnF,QAASA,EACTF,GAAIA,EACJY,KAAMA,EACNwJ,SAAUA,EACVe,cAAeA,Q,oBCjPjB4B,I,OAAQ,SACDC,GAAQ,iBAAO,CAAEvM,KAAMsM,KAC9BE,GAAS,SAGTC,GAAY,CAChBC,SAAS,GAcIC,GAXC,WAAgC,IAA/BzL,EAA8B,uDAAtBuL,GAAWzJ,EAAW,uCAC7C,OAAQA,EAAOhD,MACb,KAAKsM,GACH,MAAO,CAAEI,SAAS,GACpB,KAAKF,GACH,MAAO,CAAEE,SAAS,GACpB,QACE,OAAOxL,I,yCC2KE0L,OA/Kf,WACE,IAAMxI,EAAUC,cACVwI,EAAWC,eA+BX/I,EAAS,CACbC,QAAS,CACP,eAAgB,oCAId+I,EAAiB,SAACzK,GACtB3D,QAAQC,IAAI,EAAG0D,GACf/D,IACG2G,KADH,UACWrH,EADX,qBACuCiH,KAAKC,UAAUzC,GAAWyB,GAC9DtF,MAAK,SAACuO,GACc,MAAfA,EAAI3K,SACN1D,QAAQC,IAAI,EAAGoO,EAAIlO,MACnBoF,aAAa+I,QAAQ,gBAAiBD,EAAIlO,MAC1C+N,EAASN,MACTnI,EAAQoB,KAAK,UAKf0H,EAAgB,SAAC5K,GACrB3D,QAAQC,IAAI,EAAG0D,GACf/D,IACG2G,KADH,UACWrH,EADX,oBACsCiH,KAAKC,UAAUzC,GAAWyB,GAC7DtF,MAAK,SAACuO,GACc,MAAfA,EAAI3K,SACN1D,QAAQC,IAAI,EAAGoO,EAAIlO,MACnBoF,aAAa+I,QAAQ,gBAAiBD,EAAIlO,MAC1C+N,EAASN,MACTnI,EAAQoB,KAAK,UAKrB,OACE,sBAAKjG,GAAG,kBAAR,UACE,qBACEA,GAAG,OACHC,IAA8B,6CAC9BiE,MAAM,QAER,eAAC,IAAD,CACElE,GAAG,aACHwC,KAAK,eACLrC,UAAU,aACVyN,cAAe,CACbC,UAAU,GAEZ7I,SA7EW,SAACC,GAChBjG,IACG2G,KADH,UACWrH,EADX,UAC4B,CACxBwP,SAAU7I,EAAO6I,SACjBC,SAAU9I,EAAO8I,WAElB7O,MAAK,SAACuO,GAEL,IAAMnO,EAAWmO,EAAIhJ,QAAQuJ,cAG7B,OAFArJ,aAAa+I,QAAQ,gBAAiBpO,GACtCF,QAAQC,IAAIsF,aAAaC,QAAQ,kBAC1B6I,KAERvO,MAAK,SAACuO,GACLrO,QAAQC,IAAIoO,EAAIlO,MACC,OAAbkO,EAAIlO,MAEN+N,EAASN,MACTnI,EAAQoB,KAAK,MAEbJ,IAAQnG,MAAM,sGAGjBD,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cA6CrC,UASE,cAAC,IAAKC,KAAN,CACEtD,KAAK,WACL0D,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,gCALf,SASE,cAAC,IAAD,CACEoI,OAAQ,cAACC,GAAA,EAAD,CAAc/N,UAAU,wBAChCkG,YAAY,eAGhB,cAAC,IAAKP,KAAN,CACEtD,KAAK,WACL0D,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,yEALf,SASE,cAAC,IAAD,CACEoI,OAAQ,cAACE,GAAA,EAAD,CAAchO,UAAU,wBAChCM,KAAK,WACL4F,YAAY,eAIhB,eAAC,IAAKP,KAAN,CAAW3F,UAAU,eAArB,UACE,cAAC,IAAD,CACEH,GAAG,aACHS,KAAK,UACLiG,SAAS,SACTvG,UAAU,oBAJZ,gCADF,qDASa,IACX,cAAC,IAAD,CACEiG,KAAK,QACLjG,UAAU,YACVuI,QAAS,WACP7D,EAAQoB,KAAK,cAJjB,4CAWJ,sBAAKjG,GAAG,eAAR,UACE,qBAAKG,UAAU,cAAf,SACE,cAAC,KAAD,CACEA,UAAU,mBACViO,SAAS,2EACTC,UAAWb,EACXc,UAAWd,EACXe,aAAc,qBALhB,mFAUF,8BACE,cAAC,KAAD,CACEpO,UAAU,QACVqO,MAAO,mCACPH,UAAWV,EACXc,OAAQd,EACRe,YAAY,EACZC,OAAQ,YAAkB,IAAfjG,EAAc,EAAdA,QACT,OACE,mBACEvI,UAAU,cACVuI,QAAS,SAACzF,GACRA,EAAE2L,iBACFlG,KAJJ,SAOE,qBACEzI,IAA8B,0CCxK5C4O,I,OAAiB,CACrBC,SAAU,CACR9F,GAAI,CACF+F,KAAM,IAER9F,GAAI,CACF8F,KAAM,IAGVC,WAAY,CACVhG,GAAI,CACF+F,KAAM,IAER9F,GAAI,CACF8F,KAAM,OAINE,GAAqB,CACzBD,WAAY,CACVhG,GAAI,CACF+F,KAAM,GACNG,OAAQ,GAEVjG,GAAI,CACF8F,KAAM,GACNG,OAAQ,KA4KCC,OAvKf,WAA6B,IAAD,EACXC,IAAKC,UAAbC,EADmB,oBAEpBzK,EAAUC,cAsBVyK,EAAmBtI,uBAAY,SAACC,EAAGL,GAGvC,OAAKA,EADH,qEAIU2I,KAAK3I,GAOV3F,QAAQC,UANND,QAAQE,OACb,IAAIgG,MACF,kMALGlG,QAAQE,OAAO,IAAIgG,MAAM,kFAUjC,IAEH,OACE,sBAAKpH,GAAG,mBAAR,UACE,qBACEA,GAAG,OACHC,IAA8B,6CAC9BiE,MAAM,QAER,eAAC,IAAD,2BACElE,GAAG,sBACC6O,IAFN,IAGES,KAAMA,EACN9M,KAAK,WACLwC,SAhDW,SAACC,GAChBjG,IACG2G,KADH,UACWrH,EADX,SAC2B,CACvBwP,SAAU7I,EAAO6I,SACjB2B,MAAOxK,EAAOwK,MACd1B,SAAU9I,EAAO8I,SACjB2B,QAASzK,EAAOyK,QAChB7O,SAAUoE,EAAOpE,SACjB8O,MAAO1K,EAAO0K,QAEfzQ,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ0F,EAAQe,QAAQ,QAEjBnG,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cAiCnC+H,cAAe,CACbgC,UAAW,CAAC,WAAY,WAAY,QACpC3B,OAAQ,MAEV4B,oBAAkB,EAVpB,UAYE,cAAC,IAAK/J,KAAN,CACEtD,KAAK,WACLuD,MAAM,qBACNG,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,iEACTiK,YAAY,IAPlB,SAWE,cAAC,IAAD,CAAO3P,UAAU,qBAGnB,cAAC,IAAK2F,KAAN,CACEtD,KAAK,QACLuD,MAAM,qBACNG,MAAO,CACL,CACEzF,KAAM,QACNoF,QAAS,mEAEX,CACEM,UAAU,EACVN,QAAS,mEAVf,SAcE,cAAC,IAAD,CAAO1F,UAAU,qBAGnB,cAAC,IAAK2F,KAAN,CACEtD,KAAK,WACLuD,MAAM,2BACNG,MAAO,CACL,CACEsB,UAAW+H,IAGfQ,aAAW,EARb,SAUE,cAAC,IAAMC,SAAP,CAAgB7P,UAAU,qBAG5B,cAAC,IAAK2F,KAAN,CACEtD,KAAK,UACLuD,MAAM,wCACNkK,aAAc,CAAC,YACfF,aAAW,EACX7J,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,IAEX,gBAAGqK,EAAH,EAAGA,cAAH,MAAwB,CACtB1I,UADsB,SACZN,EAAGL,GACX,OAAKA,GAASqJ,EAAc,cAAgBrJ,EAIrC3F,QAAQE,OACb,IAAIgG,MAAM,sFAJHlG,QAAQC,cAbzB,SAuBE,cAAC,IAAM6O,SAAP,CAAgB7P,UAAU,qBAG5B,cAAC,IAAK2F,KAAN,CACEtD,KAAK,WACLuD,MAAM,qBACNoK,QAAQ,eACRjK,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,iEACTiK,YAAY,IARlB,SAYE,cAAC,IAAD,CAAO3P,UAAU,qBAGnB,cAAC,IAAK2F,KAAN,CACEtD,KAAK,QACLuD,MAAM,2BACNG,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,yEANf,SAUE,cAAC,IAAD,CAAO1F,UAAU,qBAGnB,cAAC,IAAK2F,KAAN,6BAAemJ,IAAf,aACE,cAAC,IAAD,CAAQxO,KAAK,UAAUiG,SAAS,SAAhC,iC,iDCvKF0J,GAASC,IAATD,KAsHOE,OApHf,WACE,IAAM9L,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBAE3CC,EAAUC,cAJA,EAKQlG,mBAAS,MALjB,mBAKTgC,EALS,KAKH8K,EALG,OAMc9M,mBAAS,MANvB,mBAMT2R,EANS,KAMAC,EANA,KAwBhB,OAjBA7R,IAAMI,WAAU,WACdC,IACGC,IADH,UACUX,EADV,cAC+BkG,GAC5BtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZuM,EAAQvM,EAAOI,SAEhBE,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,QAE3B,IAEHqL,YAAW,WACTyF,EAAW,QACV,KAEU,OAAT5P,EAEA,qBAAKZ,GAAG,YAAR,SACE,eAAC,IAAD,CAAOoG,KAAK,SAAZ,UACE,cAAC,IAAD,CAAMA,KAAK,UACX,cAAC,IAAD,IACA,cAAC,IAAD,CAAMA,KAAK,eAMjB,mCACE,sBAAKpG,GAAG,oBAAR,UACE,eAAC,IAAD,CACEA,GAAG,eACHuD,MAAO,CACLW,MAAO,IACPuM,WAAY,UAEdC,QAAS,CACP,cAACC,GAAA,EAAD,CACEjI,QAAS,WACP7D,EAAQoB,KAAK,mBAEX,QAEN,cAAC2K,GAAA,EAAD,GAAsB,aAb1B,UAgBGhQ,EAAKsK,gBAAgB2F,WAAW,KACP,KAAxBjQ,EAAKsK,gBACH,qBAAKlL,GAAG,6BAAR,SACE,qBAAKC,IAAI,+BAGX,cAAC,KAAD,CACED,GAAG,iBACHkE,MAAO,IACPjE,IAAG,UAAK3B,GAAL,OAAesC,EAAKsK,mBAGzBtK,EAAKsK,gBACP,cAAC,KAAD,CAAOhH,MAAO,IAAKjE,IAAG,UAAKW,EAAKsK,mBAEhC,qBAAKlL,GAAG,6BAAR,SACE,qBAAKC,IAAI,+BAGb,cAACmQ,GAAD,CAAM5P,MAAOI,EAAKC,SAAUwE,YAAazE,EAAK6O,QAC9C,qBAAKzP,GAAG,GAAR,SACE,4BACE,cAAC,KAAD,CACE8Q,YAAa,CACX,KAAM,UACN,OAAQ,WAEVP,QAASA,EACTlI,OAAQ,SAACkI,GAAD,gBAAgBA,EAAhB,oBAKhB,sBAAKvQ,GAAG,sBAAR,UACE,8BACE,cAAC,IAAD,CACEA,GAAG,cACHoG,KAAK,QACLsC,QAAS,WACP7D,EAAQoB,KAAK,cAJjB,4DAWF,8BACE,cAAC,IAAD,CACEjG,GAAG,cACH0I,QAAS,WACP7D,EAAQoB,KAAK,eAHjB,0E,OCqBG8K,OAtIf,WACE,IAAMlM,EAAUC,cADU,EAEFlG,mBAAS,MAFP,mBAEnBgC,EAFmB,KAEb8K,EAFa,OAGM9M,mBAAS,MAHf,mBAGnB2B,EAHmB,KAGTyQ,EAHS,KAIpBxM,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBA0DjD,OAvDAjG,IAAMI,WAAU,WACdC,IACGC,IADH,UACUX,EADV,cAC+BkG,GAC5BtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAGZuM,EAAQvM,EAAOI,SAEhBE,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,QAE3B,IA2CU,OAATkB,EAEA,qBAAKZ,GAAG,YAAR,SACE,eAAC,IAAD,CAAOoG,KAAK,SAAZ,UACE,cAAC,IAAD,CAAMA,KAAK,UACX,cAAC,IAAD,IACA,cAAC,IAAD,CAAMA,KAAK,eAOjB,mCACE,eAAC,IAAD,CAAMpG,GAAG,iBAAiBwC,KAAK,kCAASwC,SAvD3B,SAACC,GAChB7F,QAAQC,IAAIsF,aAAaC,QAAQ,kBACjC,IAAI/D,EAAWoE,EAAOpE,SAClB4O,EAAQxK,EAAOwK,MACH,MAAZ5O,IACFA,EAAWD,EAAKC,UAEL,MAAT4O,IACFA,EAAQ7O,EAAK6O,OAEfzQ,IACG2G,KADH,UAEOrH,EAFP,gBAGI,CACEuC,SAAUA,EACV4O,MAAOA,EACPlP,SAAUA,GAEZiE,GAEDtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ0F,EAAQe,QAAQ,cAEjBnG,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cA6BrC,UACE,cAAC,IAAKC,KAAN,CAAWtD,KAAK,SAAhB,SACE,cAAC,IAAD,CACEA,KAAK,QACLiB,OAAM,UAAKnF,EAAL,kBACNoF,SAAS,UACTuN,gBAAgB,EAChBrN,SAjCY,SAAChB,GAErB,GADAxD,QAAQC,IAAIuD,EAAK3B,KAAK6B,QACG,cAArBF,EAAK3B,KAAK6B,QAGW,SAArBF,EAAK3B,KAAK6B,OAAmB,CAC/B,IAAMvC,EAAWqC,EAAK3B,KAAK8B,SAC3BnC,EAAKsK,gBAAkB3K,EACvByQ,EAAYzQ,KAoBR,SAOGK,EAAKsK,gBAAgB2F,WAAW,KAC/BjQ,EAAKsK,gBACH,qBACElL,GAAG,iBACHC,IAAG,UAAK3B,GAAL,OAAesC,EAAKsK,mBAGzB,sBAAKlL,GAAG,6BAAR,UACE,qBAAKC,IAAI,6BACT,2GAGFW,EAAKsK,gBACP,qBAAKlL,GAAG,iBAAiBC,IAAG,UAAKW,EAAKsK,mBAEtC,sBAAKlL,GAAG,6BAAR,UACE,qBAAKC,IAAI,6BACT,+GAKR,cAAC,IAAK6F,KAAN,CAAWtD,KAAK,WAAhB,SACE,cAAC,IAAD,CACErC,UAAU,cACViG,KAAK,QACLC,YAAY,iEACZC,aAAY,UAAK1F,EAAKC,cAG1B,cAAC,IAAKiF,KAAN,CAAWtD,KAAK,QAAhB,SACE,cAAC,IAAD,CACErC,UAAU,cACViG,KAAK,QACLC,YAAY,iEACZC,aAAY,UAAK1F,EAAK6O,WAG1B,cAAC,IAAK3J,KAAN,UACE,cAAC,IAAD,CAAQ9F,GAAG,SAASS,KAAK,UAAU2F,KAAK,QAAQM,UAAQ,EAAxD,qDCxEKwK,GAtEA,WA+DX,OA7DFnS,qBAAU,WACR,IAAIoS,EAAeC,SAASC,eAAe,OAC3CC,EAAY,CACRC,OAAQ,IAAIC,MAAMC,KAAKC,OAAO,UAAW,YACzCC,MAAO,GAGX9R,EAAM,IAAI2R,MAAMC,KAAKG,IAAIT,EAAcG,GAG3C,GAAIO,UAAUC,YAGVD,UAAUC,YAAYC,oBAAmB,SAASC,GAE9C,IAAIC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UAM1BC,EAJkB,IAAId,MAAMC,KAAKC,OAAOO,EAAKG,GAC/B,wFAOf,CAKHE,EAHkB,IAAId,MAAMC,KAAKC,OAAO,UAAW,YACrC,mEAMlB,SAASY,EAAcC,EAAa1M,GAGhC,IAAI2M,EAAS,IAAIhB,MAAMC,KAAKgB,OAAO,CAC/B5S,IAAKA,EACLmS,SAAUO,IAGVG,EAAY7M,EAIC,IAAI2L,MAAMC,KAAKkB,WAAW,CACvCnT,QAAUkT,EACVE,WALe,IASRC,KAAKhT,EAAK2S,GAGrB3S,EAAIiT,UAAUP,MAEX,IAIC,8BACC,qBAAKvS,GAAG,MAAMuD,MAAO,CAACW,MAAM,SAAUuI,OAAO,c,OChDtDlO,IAAMC,OAAOC,KAgGEsU,OA9Ff,WAAsB,IAAD,EACapU,IAAMC,SAAS,IAD5B,mBACZC,EADY,KACFC,EADE,OAEKF,mBAAS,MAFd,mBAEZgC,EAFY,KAEN8K,EAFM,KAIblH,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBA2BjD,OAxBAjG,IAAMI,WAAU,WACdC,IACGC,IADH,UACUX,EADV,cAEGY,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAMG,EAAWH,EAAOI,KAAKC,QAC7BV,EAAYQ,MAEbG,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,MAG5BV,IACGC,IADH,UACUX,EADV,cAC+BkG,GAC5BtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZuM,EAAQvM,EAAOI,SAEhBE,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,QAE3B,IAEU,OAATkB,EAEA,qBAAKZ,GAAG,YAAR,SACE,eAAC,IAAD,CAAOoG,KAAK,SAAZ,UACE,cAAC,IAAD,CAAMA,KAAK,UACX,cAAC,IAAD,IACA,cAAC,IAAD,CAAMA,KAAK,eAOjB,gCACE,oBAAIpG,GAAG,mBAAP,sCACA,qBAAKA,GAAG,eAAR,SACGnB,EAASgB,KAAI,SAAUK,EAASH,GAC/B,GAAIG,EAAQU,KAAKZ,KAAOY,EAAKZ,GAC3B,OACE,sBAAKG,UAAU,eAAf,UACuB,IAApBD,EAAQE,SAAiB,qBAAKD,UAAU,iBACzC,eAAC,IAAD,CAAMA,UAAU,eAAeE,GAAE,oBAAeH,EAAQF,IAAxD,UACE,8BACE,qBACEG,UAAU,cACVF,IAAG,UAAK3B,GAAL,OAAe4B,EAAQI,OAAO,GAAGC,cAGxC,sBAAKJ,UAAU,mBAAf,UACE,sBAAMA,UAAU,eAAhB,SACE,+BAAOD,EAAQM,UAEjB,sBAAML,UAAU,gBAAhB,SACoB,IAAjBD,EAAQO,KACP,iCAAOP,EAAQQ,MAAf,YAEA,iCAAOR,EAAQS,IAAf,cAGJ,sBAAKR,UAAU,iBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBACEA,UAAU,iBACVF,IAAI,4BAEN,+BAAOC,EAAQU,KAAKC,cAEtB,sBAAMV,UAAU,eAAhB,SACG5B,IAAM2B,EAAQY,YAAYC,iC,2GCqGpCiS,IC/LXC,GACAC,GAEAC,GAkCAC,GD0JWJ,GA1Lf,WACE,IAAMxO,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBAF7B,EAIYhG,mBAAS,MAJrB,mBAIb2B,EAJa,KAIHyQ,EAJG,OAKcpS,mBAAS,MALvB,mBAKbyU,EALa,KAKFC,EALE,KAMZtT,EAAO8H,cAAP9H,GACF6E,EAAUC,cAPI,EAQUlG,mBAAS,MARnB,mBAQbsB,EARa,KAQJuL,EARI,KAkFpB,OAxEA1M,qBAAU,WACRC,IACGC,IADH,UACUX,EADV,qBAC8B0B,GAAMwE,GACjCtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZsM,EAAWtM,EAAOI,MAClByR,EAAY7R,EAAOI,KAAKgB,aAEzBd,OAAM,SAACC,GACNN,QAAQM,MAAM,gBAAOA,QAExB,IA6Da,OAAZQ,EAEA,qBAAKF,GAAG,YAAR,SACE,eAAC,IAAD,CAAOoG,KAAK,SAAZ,UACE,cAAC,IAAD,CAAMA,KAAK,UACX,cAAC,IAAD,IACA,cAAC,IAAD,CAAMA,KAAK,eAOjB,qBAAKpG,GAAG,mBAAR,SACE,eAAC,IAAD,CAAMwC,KAAK,kCAASwC,SAzEP,SAACC,GAChBjG,IACGyK,IADH,UAEOnL,EAFP,iBAEuB0B,GACnB,CACEQ,MAAOyE,EAAOzE,MACd6E,YAAaJ,EAAOI,YACpB3E,MAAOoG,SAAS7B,EAAOvE,OACvBH,SAAUA,GAEZiE,GAEDtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ0F,EAAQe,QAAQ,QAEjBnG,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,aAEvC7G,IACG2G,KADH,yCACkD,CAC9CnF,MAAOyE,EAAOzE,MACd6E,YAAaJ,EAAOI,YACpB3E,MAAOoG,SAAS7B,EAAOvE,OACvBH,SAAU8S,IAEXnU,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ0F,EAAQe,QAAQ,QAEjBnG,OAAM,SAACC,GACNN,QAAQM,MAAMA,GACdmG,IAAQnG,MAAR,mEAA6BA,EAAMmG,cAwCrC,UACE,eAAC,IAAKC,KAAN,CACEtD,KAAK,SACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCAFT,UAIE,cAAC,IAAD,CACEqC,KAAK,QACLiB,OAAM,UAAKnF,EAAL,UACNoF,SAAS,UACTuN,gBAAgB,EAChBrN,SA/CY,SAAChB,GAErB,GADAxD,QAAQC,IAAIuD,EAAK3B,KAAK6B,QACG,cAArBF,EAAK3B,KAAK6B,QAGW,SAArBF,EAAK3B,KAAK6B,OAAmB,CAC/B,IAAMvC,EAAWqC,EAAK3B,KAAK8B,SAC3BiO,EAAYzQ,KAmCR,SAOGA,EACC,qBAAKP,GAAG,aAAaC,IAAG,UAAK3B,GAAL,OAAeiC,KAEvC,sBAAKP,GAAG,yBAAR,UACE,qBAAKC,IAAI,6BACT,6GAIN,cAAC,IAAD,CACEuC,KAAK,QACLiB,OAAM,sCACNC,SAAS,UACTuN,gBAAgB,EAChBrN,SApDa,SAAChB,GAEtB,GADAxD,QAAQC,IAAIuD,EAAK3B,KAAK6B,QACG,cAArBF,EAAK3B,KAAK6B,QAGW,SAArBF,EAAK3B,KAAK6B,OAAmB,CAC/B,IACMuQ,EADWzQ,EAAK3B,KAAK8B,SACAxC,SAC3B+S,EAAaD,KAuCT,SAOGA,EACC,qBACErT,GAAG,aACHC,IAAG,wCAAmCoT,KAGxC,sBAAKrT,GAAG,yBAAR,UACE,qBAAKC,IAAI,6BACT,gHAMR,cAAC,IAAK6F,KAAN,CACEtD,KAAK,QACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,0EAHrC,SAKE,cAAC,IAAD,CACE1F,UAAU,cACViG,KAAK,QACLE,aAAY,UAAKpG,EAAQM,WAG7B,cAAC,IAAD,IACA,cAAC,IAAKsF,KAAN,CACEtD,KAAK,QACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,yEAHrC,SAKE,cAAC,IAAD,CACE1F,UAAU,eACViG,KAAK,QACLE,aAAY,UAAKpG,EAAQQ,WAG7B,cAAC,IAAD,IACA,cAAC,IAAKoF,KAAN,CACEtD,KAAK,cACLuD,MAAO,qBAAK5F,UAAU,eAAf,uCACP+F,MAAO,CAAC,CAAEC,UAAU,EAAMN,QAAS,0EAHrC,SAKE,cAAC,IAAMU,SAAP,CACEH,KAAK,QACLpG,GAAG,sBACHwG,WAAS,EACTC,UAAW,IACXJ,YAAY,kEACZC,aAAY,UAAKpG,EAAQmF,iBAG7B,cAAC,IAAKS,KAAN,UACE,cAAC,IAAD,CAAQ9F,GAAG,gBAAgBoG,KAAK,QAAQM,UAAQ,EAAhD,qD,mDCpLN6M,GAAc,KAGZC,GAAU,SAACvO,GACfwO,KACA,IAAIC,EAAS,IAAIC,KAAO,SACxBJ,GAAcK,KAAMC,KAAKH,GACzBT,GAAahO,EAAOgO,WACpBC,GAAmBjO,EAAOiO,iBAC1BC,GAASlO,EAAOkO,OAChBI,GAAYC,QAAQ,IAAI,WACtBD,GAAYO,UAAU,UAAYX,IAAQ,SAAUlQ,IAyBxD,SAAyBA,GACvBmQ,GAAQhC,SAASC,eAAe,gBAChC,IAAI0C,EAAc3C,SAAS4C,cAAc,OACzCD,EAAYE,UAAZ,qCAAsDhR,EAAEkQ,OAAxD,YAAkElQ,EAAE4C,QAApE,gBACAuN,GAAM3N,OAAOsO,GAEbX,GAAMc,UAAYd,GAAMe,aA9BpBC,CAAgB7O,KAAK8O,MAAMpR,EAAEqR,OAC7BlV,QAAQC,IAAI,gFAKZkV,GAAkB,SAACtP,GACvB,IAAI1F,EAAO,CACTiV,WAAYvB,GACZE,OAAQA,GACRsB,SAAUvB,GACVrN,QAASZ,EAAOY,SAElB0N,GAAYmB,KAAK,iBAAkB,GAAInP,KAAKC,UAAUjG,IAmBxD,SAA0B0D,GACxBmQ,GAAQhC,SAASC,eAAe,gBAChC,IAAI0C,EAAc3C,SAAS4C,cAAc,OACzCD,EAAYE,UAAZ,0CAA2DhR,EAAEkQ,OAA7D,aAAwElQ,EAAE4C,QAA1E,gBACAuN,GAAM3N,OAAOsO,GACbX,GAAMc,UAAYd,GAAMe,aAvBxBQ,CAAiBpV,IAGnB,SAASkU,KACa,OAAhBF,IACFA,GAAYE,aAqBhBtH,OAAOyI,eAAiB,SAAU3R,GAChCwQ,MA0IaoB,OAxIf,WACE,IAAMrQ,EAAS,CACbC,QAAS,CAAEC,cAAeC,aAAaC,QAAQ,mBAF/B,EAKMhG,qBALN,mBAKXgC,EALW,KAKL8K,EALK,OAMO9M,mBAAS,IANhB,mBAMXkW,EANW,KAMJC,EANI,OAOcnW,mBAAS,IAPvB,mBAOXoW,EAPW,KAODC,EAPC,KASlBtW,IAAMI,WAAU,WACdC,IACGC,IADH,UACUX,EADV,cAC+BkG,GAC5BtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZuM,EAAQvM,EAAOI,SAEhBE,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,MAG5BV,IACGC,IADH,UACUX,EADV,cAC+BkG,GAC5BtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAOI,MACnBwV,EAAQ5V,EAAOI,SAEhBE,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,QAE3B,IAEH,IAAMwV,EAAW,SAACjS,GAChB7D,QAAQC,IAAI,yBACZ,IAAI8V,EAAKC,OAAOnS,EAAEqI,OAAO+J,aAAa,cAClCC,EAAKrS,EAAEqI,OAAO+J,aAAa,aAC3BE,EAAKtS,EAAEqI,OAAO+J,aAAa,aAyB/B,OAxBAjW,QAAQC,IAAI8V,EAAIG,EAAIC,GAMpB/B,GALW,CACTP,WAAYkC,EACZjC,iBAAkBoC,EAClBnC,OAAQoC,IAGVvW,IACGC,IADH,UACUX,EADV,iBAC0B2U,IAAczO,GACrCtF,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAOI,KAAKyV,UAExBC,EAAY9V,EAAOI,KAAKyV,UAExB,IAAIQ,EAAMpE,SAASqE,cAAc,OACnBrE,SAASC,eAAe,gBAC9BqE,YAAYF,GAEpB,IAAIG,EAASvE,SAASC,eAAe,gBACrCsE,EAAOzB,UAAYyB,EAAOxB,gBAE3B1U,OAAM,SAACC,GACNN,QAAQM,MAAM,6BAAUA,OAErB,GAGT,OAAiB,OAAbsV,EAEA,qBAAKhV,GAAG,YAAR,SACE,eAAC,IAAD,CAAOoG,KAAK,SAAZ,UACE,cAAC,IAAD,CAAMA,KAAK,UACX,cAAC,IAAD,IACA,cAAC,IAAD,CAAMA,KAAK,eAOjB,mCACE,qBAAKwP,MAAM,uBAAX,SACE,sBAAKA,MAAM,MAAX,UACE,qBAAKA,MAAM,YAAX,SACGd,EAAMjV,KAAI,SAACgW,GAEV,OADAzW,QAAQC,IAAIwW,GAEV,yBACEC,YAAA,UAAcD,EAAKrB,YACnBuB,YAAA,UAAcF,EAAK3C,kBACnB8C,YAAA,UAAcpV,EAAKC,UACnB6H,QAASwM,EAJX,UAMGW,EAAK3C,iBANR,0CAWN,qBAAK0C,MAAM,YAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,0BAA0B5V,GAAG,eAAvC,SACGgV,EACEnV,KAAI,SAACoW,GACJ,OAAOA,EAAIC,OAAOlW,KAAOY,EAAKZ,GAC5B,6BACE,sBAAM4V,MAAM,gBAAZ,SAA6BK,EAAIpQ,YAGnC,6BACE,sBAAM+P,MAAM,WAAZ,SAAwBK,EAAIpQ,eAIjCmG,YAEL,qBAAK4J,MAAM,cAAX,SACE,eAAC,IAAD,CAAM5Q,SAAUuP,GAAhB,UACE,cAAC,IAAKzO,KAAN,CAAWtD,KAAK,UAAhB,SACE,cAAC,IAAD,CACErC,UAAU,cACViG,KAAK,QACLC,YAAY,qEAGhB,cAAC,IAAKP,KAAN,UACE,cAAC,IAAD,CAAQ9F,GAAG,SAASS,KAAK,UAAU2F,KAAK,QAAQM,UAAQ,EAAxD,8CCsELiB,OArOf,WACE,IAAM9C,EAAUC,cACVwI,EAAWC,eAEXJ,EAAUgJ,cAAY,SAACC,GAAD,OAAWA,EAAMjJ,WAE7CxO,IAAMI,WAAU,WAEG,OADF4F,aAAaC,QAAQ,kBAElC0I,EAASN,QAEV,IAEH,IAiCMqJ,EACJ,eAAC,KAAD,WACE,cAAC,KAAKvQ,KAAN,CAAWwQ,KAAM,cAACC,GAAA,EAAD,IAAjB,yBAAuC,KAGvC,cAAC,KAAKzQ,KAAN,CAAWwQ,KAAM,cAACE,GAAA,EAAD,IAAjB,mDAAwC,KAGxC,cAAC,KAAK1Q,KAAN,CAAWwQ,KAAM,cAACG,GAAA,EAAD,IAAjB,wDAAyC,KAGzC,cAAC,KAAK3Q,KAAN,CAAWwQ,KAAM,cAACI,GAAA,EAAD,IAAjB,+BAAyC,KAGzC,cAAC,KAAK5Q,KAAN,CAAWwQ,KAAM,cAACK,GAAA,EAAD,IAAjB,4CAA8C,KAG9C,cAAC,KAAK7Q,KAAN,CAAWwQ,KAAM,cAACM,GAAA,EAAD,IAAjB,+BAAsC,QAKpCC,EACJ,eAAC,KAAD,WACE,cAAC,KAAK/Q,KAAN,CAAW4C,QAzDA,WACRyE,EAIHtI,EAAQoB,KAAK,YAHbJ,IAAQnG,MAAM,oEACdmF,EAAQoB,KAAK,YAsDuBqQ,KAAM,cAAChT,EAAA,EAAD,IAA1C,qCAAgC,KAGhC,cAAC,KAAKwC,KAAN,CAAW4C,QAnDO,WACfyE,EAIHtI,EAAQoB,KAAK,mBAHbJ,IAAQnG,MAAM,oEACdmF,EAAQoB,KAAK,YAgD8BqQ,KAAM,cAAChT,EAAA,EAAD,IAAjD,qCAAuC,QAMrCwT,EACJ,eAAC,KAAD,WACE,cAAC,KAAKhR,KAAN,UACE,mBAAG4C,QA7CU,WACjB7D,EAAQoB,KAAK,YA4CT,kCAEF,cAAC,KAAKH,KAAN,UACE,mBAAG4C,QA5CY,WACnB7D,EAAQoB,KAAK,cA2CT,mCAKN,OACE,gCACE,eAAC,KAAD,CAAO8Q,UAAW,EAAlB,UACE,qBAAK/W,GAAG,SAAR,SACE,sBAAKA,GAAG,cAAR,UACE,cAAC,IAAD,CAAMK,GAAG,IAAT,SACE,qBACEL,GAAG,OACHC,IAA8B,6CAC9BiE,MAAM,OAGTiJ,EACC,mCACE,gCACE,cAAC,KAAD,CAAU6J,QAASF,EAAOG,UAAU,aAAaC,OAAK,EAAtD,SACE,eAAC,IAAD,CAAQ9Q,KAAK,QAAQjG,UAAU,YAA/B,UACE,qBACEH,GAAG,UACHC,IAC2B,6BAJ/B,0BAUF,cAAC,IAAD,CACEmG,KAAK,QACLsC,QAvFC,WACjB/D,aAAawS,WAAW,iBACxB7J,ET7DyB,CAAE7M,KAAMwM,KS8DjCpI,EAAQoB,KAAK,MAqFG9F,UAAU,YAHZ,2CAUJ,mCACE,gCACE,cAAC,IAAD,CACEA,UAAU,YACViG,KAAK,QACLsC,QAAS,WACP7D,EAAQoB,KAAK,WAJjB,gCAUA,cAAC,IAAD,CACEG,KAAK,QACLjG,UAAU,YACVuI,QAAS,WACP7D,EAAQoB,KAAK,cAJjB,gDAeV,qBAAKjG,GAAG,aAAR,SACE,sBAAKA,GAAG,kBAAR,UACE,mCACE,8BACE,cAAC,KAAD,CAAUgX,QAASX,EAAnB,SACE,cAAC,IAAD,CACElW,UAAU,YACViG,KAAK,QACLkQ,KAAM,cAACc,GAAA,EAAD,IAHR,4CAUN,mCACE,cAAC,KAAD,CAAUJ,QAASH,EAAnB,SACE,cAAC,IAAD,CACE1W,UAAU,WACViG,KAAK,QACL3F,KAAK,UACL6V,KAAM,cAAChT,EAAA,EAAD,IAJR,yDAcV,qBAAKtD,GAAG,OAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqX,OAAO,EAAMC,KAAK,IAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,gBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,UAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,iBAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,SAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,YAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,UAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,YAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,gBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,aAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,kBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,iBAAzB,SACE,cAAC,GAAD,WAIN,qBAAKtX,GAAG,eCnPCuX,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvY,MAAK,YAAkD,IAA/CwY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCGRpB,GAAQ2B,aAAY3K,IAE1B4K,IAASrJ,OACP,cAAC,IAAMsJ,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,GAAzB,SACE,cAAC,KAAD,CAAU/B,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINhF,SAASC,eAAe,SAM1BkG,O","file":"static/js/main.543f359b.chunk.js","sourcesContent":["export const API_URL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://itsmine.ngrok.io\"\r\n    : \"https://itsmine.ngrok.io\";\r\n","import \"./index.css\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport { API_URL } from \"../config/constants.js\";\r\nimport { Carousel } from \"antd\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nfunction MainPage() {\r\n  const [products, setProducts] = React.useState([]);\r\n  const banners = [\r\n    \"/banner1.jpg\",\r\n    \"/banner2.png\",\r\n    \"/banner3.png\",\r\n    \"/banner4.png\",\r\n  ];\r\n  React.useEffect(function () {\r\n    axios\r\n      .get(`${API_URL}/products`)\r\n      .then((result) => {\r\n        console.log(result);\r\n        const contents = result.data.content;\r\n        setProducts(contents);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Carousel autoplay autoplaySpeed={3000}>\r\n        {banners.map((banner, index) => {\r\n          return (\r\n            <div id=\"banner\">\r\n              <img src={process.env.PUBLIC_URL + \"/banners\" + banner} />\r\n            </div>\r\n          );\r\n        })}\r\n      </Carousel>\r\n      <h1 id=\"product-headline\">판매상품</h1>\r\n      <div id=\"product-list\">\r\n        {products.map(function (product, index) {\r\n          return (\r\n            <div className=\"product-card\">\r\n              {product.soldout === 1 && <div className=\"product-blur\" />}\r\n              <Link className=\"product-link\" to={`/products/${product.id}`}>\r\n                <div>\r\n                  <img\r\n                    className=\"product-img\"\r\n                    src={`${API_URL}${product.photos[0].imageUrl}`}\r\n                  />\r\n                </div>\r\n                <div className=\"product-contents\">\r\n                  <span className=\"product-name\">\r\n                    <span>{product.title}</span>\r\n                  </span>\r\n                  <span className=\"product-price\">\r\n                    {product.type === 0 ? (\r\n                      <span>{product.price}원</span>\r\n                    ) : (\r\n                      <span>{product.bid}원</span>\r\n                    )}\r\n                  </span>\r\n                  <div className=\"product-footer\">\r\n                    <div className=\"product-seller\">\r\n                      <img\r\n                        className=\"product-avatar\"\r\n                        src={\r\n                          process.env.PUBLIC_URL + \"/images/icons/avatar.png\"\r\n                        }\r\n                      />\r\n                      <span>{product.user.nickname}</span>\r\n                    </div>\r\n                    <span className=\"product-date\">\r\n                      {dayjs(product.createDate).fromNow()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","/* eslint-disable no-unused-expressions */\r\nimport { Upload, Modal, message } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport { API_URL } from \"../config/constants\";\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nclass PicturesWall extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    fileList: [],\r\n  };\r\n  fileIds = [];\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  handleChange = (info) => {\r\n    console.log(info);\r\n    var fileList = info.fileList;\r\n    this.setState({ fileList });\r\n    this.onChangeImage(info);\r\n  };\r\n  onChangeImage = (info) => {\r\n    console.log(info.file.status);\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      const imageUrl = info.file.response;\r\n      this.onFormSubmit(imageUrl);\r\n    }\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    this.props.getTextValue(e);\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Upload\r\n          name=\"image\"\r\n          action={`${API_URL}/image`}\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PicturesWall;\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Upload,\r\n  message,\r\n  Select,\r\n} from \"antd\";\r\nimport { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PicturesWall from \"../picturesWall\";\r\n\r\nconst { Option } = Select;\r\nvar fileIdList = [];\r\n\r\nfunction UploadPage() {\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n\r\n  const history = useHistory();\r\n  const [fileIds, setFileIds] = useState([]);\r\n\r\n  const getTextValue = (fileId) => {\r\n    fileIdList.push(fileId);\r\n    setFileIds(fileIdList);\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    const formData = new FormData();\r\n    const data1 = {\r\n      title: values.title,\r\n      description: values.description,\r\n      price: values.price,\r\n      type: 0,\r\n    };\r\n    const data2 = {\r\n      fileIdList: fileIds,\r\n    };\r\n    console.log(JSON.stringify(data2));\r\n    formData.append(\r\n      \"post1\",\r\n      new Blob([JSON.stringify(data1)], { type: \"application/json\" })\r\n    );\r\n    formData.append(\r\n      \"post2\",\r\n      new Blob([JSON.stringify(data2)], { type: \"application/json\" })\r\n    );\r\n    console.log(formData.get);\r\n    axios\r\n      .post(`${API_URL}/nomalAuctionPost`, formData, config)\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n  //추천 서버이니까 나중에 추가하시오.\r\n  // axios\r\n  //   .post(`https://75bee61c1be4.ngrok.io/products`, {\r\n  //     title: values.title,\r\n  //     description: values.description,\r\n  //     price: parseInt(values.price),\r\n  //     imageUrl: imageUrl2,\r\n  //   })\r\n  //   .then((result) => {\r\n  //     console.log(result);\r\n  //     history.replace(\"/\");\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error(error);\r\n  //     message.error(`에러가 발생했습니다. ${error.message}`);\r\n  //   });\r\n\r\n  return (\r\n    <div id=\"upload-container\">\r\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\r\n        <Form.Item\r\n          name=\"upload\"\r\n          label={<div className=\"upload-label\">상품 사진</div>}\r\n        >\r\n          <PicturesWall getTextValue={getTextValue} />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"title\"\r\n          label={<div className=\"upload-label\">상품 이름</div>}\r\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요.\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"상품 이름을 입력해주세요.\"\r\n          ></Input>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"price\"\r\n          label={<div className=\"upload-label\">상품 가격</div>}\r\n          rules={[{ required: true, message: \"상품 가격을 입력해주세요\" }]}\r\n        >\r\n          <InputNumber\r\n            className=\"upload-price\"\r\n            size=\"large\"\r\n            defaultValue={0}\r\n          ></InputNumber>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"description\"\r\n          label={<div className=\"upload-label\">상품 소개</div>}\r\n          rules={[{ required: true, message: \"상품 소개를 입력해주세요.\" }]}\r\n        >\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            id=\"product-description\"\r\n            showCount\r\n            maxLength={300}\r\n            placeholder=\"상품 소개를 적어주세요.\"\r\n          ></Input.TextArea>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit-button\" size=\"large\" htmlType>\r\n            상품 업로드\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPage;\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  message,\r\n  Select,\r\n} from \"antd\";\r\nimport { useCallback, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PicturesWall from \"../picturesWall\";\r\n\r\nconst { Option } = Select;\r\nvar fileIdList = [];\r\nvar priceTest = 0;\r\nvar bidLimitTest = 0;\r\n\r\nfunction handleChange(value) {\r\n  console.log(value);\r\n  bidLimitTest = parseInt(value);\r\n}\r\n\r\nfunction AuctionUpload() {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: localStorage.getItem(\"Authorization\"),\r\n    },\r\n  };\r\n  const [fileIds, setFileIds] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const limtCheck = useCallback((_, value) => {\r\n    let limitPrice = parseInt(value);\r\n    if (limitPrice <= priceTest + bidLimitTest) {\r\n      return Promise.reject(\r\n        new Error(\r\n          \"상한가가 경매가보다 낮거나 (경매가 + 최소입찰 금액) 보다 낮습니다.\"\r\n        )\r\n      );\r\n    }\r\n    if (limitPrice % bidLimitTest != 0) {\r\n      return Promise.reject(\r\n        new Error(\"상한가를 최소 입찰 단위에 나누어 떨어지게 설정해 주세요.\")\r\n      );\r\n    }\r\n    return Promise.resolve();\r\n  }, []);\r\n\r\n  function priceChange(value) {\r\n    console.log(value);\r\n    for (var a in fileIds) console.log(a);\r\n    priceTest = value;\r\n  }\r\n  const getTextValue = (fileId) => {\r\n    fileIdList.push(fileId);\r\n    setFileIds(fileIdList);\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    const formData = new FormData();\r\n    const data1 = {\r\n      title: values.title,\r\n      description: values.description,\r\n      endTime: parseInt(values.endTime),\r\n      bid: parseInt(values.bid),\r\n      minBidUnit: parseInt(values.minBidUnit),\r\n      bidLimit: parseInt(values.bidLimit),\r\n      type: 1,\r\n    };\r\n    const data2 = {\r\n      fileIdList: fileIds,\r\n    };\r\n    console.log(JSON.stringify(data2));\r\n    formData.append(\r\n      \"post1\",\r\n      new Blob([JSON.stringify(data1)], { type: \"application/json\" })\r\n    );\r\n    formData.append(\r\n      \"post2\",\r\n      new Blob([JSON.stringify(data2)], { type: \"application/json\" })\r\n    );\r\n    console.log(formData.get);\r\n\r\n    axios\r\n      .post(`${API_URL}/nomalAuctionPost`, formData, config)\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"upload-container\">\r\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\r\n        <Form.Item\r\n          name=\"upload\"\r\n          label={<div className=\"upload-label\">상품 사진</div>}\r\n        >\r\n          <PicturesWall getTextValue={getTextValue} />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"title\"\r\n          label={<div className=\"upload-label\">상품 이름</div>}\r\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요.\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"상품 이름을 입력해주세요.\"\r\n          ></Input>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"endTime\"\r\n          label={<div className=\"upload-label\">경매마감시간</div>}\r\n        >\r\n          <Select style={{ width: 120 }} onChange={handleChange}>\r\n            <Option value=\"1\">1일후</Option>\r\n            <Option value=\"3\">3일후</Option>\r\n            <Option value=\"7\">7일후</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"bid\"\r\n          label={<div className=\"upload-label\">경매시작가</div>}\r\n          rules={[{ required: true, message: \"경매 시작가를 입력해주세요\" }]}\r\n        >\r\n          <InputNumber\r\n            className=\"upload-price\"\r\n            size=\"large\"\r\n            onChange={priceChange}\r\n            defaultValue={0}\r\n          ></InputNumber>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"minBidUnit\"\r\n          label={\r\n            <div className=\"upload-label\" id=\"upload-label2\">\r\n              최소 입찰 단위\r\n            </div>\r\n          }\r\n        >\r\n          <Select\r\n            style={{ width: 120 }}\r\n            onChange={handleChange}\r\n            rules={[\r\n              { required: true, message: \"최소 입찰 단위를 입력해주세요\" },\r\n            ]}\r\n          >\r\n            <Option value=\"500\">500원</Option>\r\n            <Option value=\"1000\">1000원</Option>\r\n            <Option value=\"5000\">5000원</Option>\r\n            <Option value=\"10000\">10000원</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"bidLimit\"\r\n          label={<div className=\"upload-label\">상한가</div>}\r\n          rules={[\r\n            { required: true, message: \"상한가를 입력해주세요\" },\r\n            {\r\n              validator: limtCheck,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            className=\"upload-price\"\r\n            size=\"large\"\r\n            defaultValue={0}\r\n          ></InputNumber>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"description\"\r\n          label={<div className=\"upload-label\">상품 소개</div>}\r\n          rules={[{ required: true, message: \"상품 소개를 입력해주세요.\" }]}\r\n        >\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            id=\"product-description\"\r\n            showCount\r\n            maxLength={500}\r\n            placeholder=\"상품 소개를 적어주세요. 내용은 최대 500자 입니다.\"\r\n            style={{ width: 500 }}\r\n          ></Input.TextArea>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit-button\" size=\"large\" htmlType>\r\n            상품 업로드\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuctionUpload;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, InputNumber, message, Statistic } from \"antd\";\r\nimport { List, Card, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { API_URL } from \"../../config/constants\";\r\nimport dayjs from \"dayjs\";\r\nimport \"./bidPage.css\";\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nconst App = (props) => {\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const { id } = useParams();\r\n  const userId = props.userId;\r\n  const product = props.product;\r\n  const history = useHistory();\r\n\r\n  var timerSet = product.createDate;\r\n  const deadline =\r\n    new Date(timerSet).getTime() + 1000 * 60 * 60 * 24 * product.endTime; // 타이머 변수\r\n\r\n  function onFinish() {\r\n    console.log(\"finished!\");\r\n  } //경매 타이머 끝나면 실행되는 함수임\r\n\r\n  const showModal = () => {\r\n    console.log(props);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const checkBidder = () => {\r\n    if (product.bidder == null) {\r\n      return \"입찰자 없음\";\r\n    }\r\n    let bidder = product.bidder.nickname;\r\n    return bidder;\r\n  };\r\n\r\n  const data = [\r\n    {\r\n      title: \"상품명\",\r\n      content: product.title,\r\n    },\r\n    {\r\n      title: \"경매 마감일\",\r\n      content: dayjs(product.createDate).format(\"YYYY년 MM월 DD일\"),\r\n    },\r\n    {\r\n      title: \"판매자명\",\r\n      content: product.user.nickname,\r\n    },\r\n    {\r\n      title: \"판매 지역\",\r\n      content: \"서울\",\r\n    },\r\n    {\r\n      title: \"현재가 및 낙찰예정자\",\r\n      content: `${product.bid}원 : ${checkBidder()}`,\r\n    },\r\n    {\r\n      title: \"상한가(즉시구매가) 및 최소 입찰 단위\",\r\n      content: `${product.bidLimit}원 / ${product.minBidUnit}`,\r\n    },\r\n  ];\r\n  const bidPost = (values) => {\r\n    if (product.bid > parseInt(values.bid)) {\r\n      message.error(`입찰금액이 현재 가격보다 낮습니다...`);\r\n    } else if (product.bidder != null) {\r\n      if (product.bidder.id === userId)\r\n        message.error(`이미 입찰 하셨습니다.....`);\r\n    } else if (product.user.id === userId) {\r\n      message.error(`본인의 상품은 입찰하실 수 없습니다......`);\r\n    } else {\r\n      axios\r\n        .put(\r\n          `${API_URL}/bidPost/${id}`,\r\n          {\r\n            title: product.title,\r\n            description: product.description,\r\n            bid: parseInt(values.bid),\r\n            bidderId: userId,\r\n            imageUrl: product.imageUrl,\r\n          },\r\n          config\r\n        )\r\n        .then((result) => {\r\n          message.success(\"입찰되었습니다!\");\r\n          history.replace(`/products/${id}`);\r\n          handleOk();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          message.error(`에러가 발생했습니다. ${error.message}`);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider />\r\n      <Countdown\r\n        title=\"남은시간:\"\r\n        value={deadline}\r\n        valueStyle={{ fontSize: 23 }}\r\n        onFinish={onFinish}\r\n        format=\"D 일 H : m : s\"\r\n      />\r\n      <Divider />\r\n      <Button\r\n        id=\"bill-button\"\r\n        size=\"large\"\r\n        type=\"primary\"\r\n        danger\r\n        htmlType\r\n        onClick={showModal}\r\n      >\r\n        입찰하기\r\n      </Button>\r\n      <Modal\r\n        bodyStyle={{ color: \"#3399FF\", fontSize: 25 }}\r\n        title=\"경매 입찰\"\r\n        width={1080}\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[]}\r\n      >\r\n        📰경매 상품 정보\r\n        <List\r\n          style={{ marginTop: 20 }}\r\n          grid={{\r\n            gutter: 16,\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 3,\r\n            xxl: 3,\r\n          }}\r\n          dataSource={data}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card title={item.title} style={{ fontSize: 25 }}>\r\n                {item.content}\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n        💰입찰 정보 입력\r\n        <Form onFinish={bidPost} style={{ paddingTop: 30 }}>\r\n          <Form.Item\r\n            name=\"bid\"\r\n            label={<div className=\"upload-label\">입찰가격(원)</div>}\r\n            rules={[\r\n              { required: true, message: \"ㅤㅤ입찰 가격을 입력해주세요\" },\r\n              {\r\n                required: function () {},\r\n                message: \"최소 입찰 단위에 맞게 입찰해 주세요! \",\r\n              },\r\n            ]}\r\n            style={{ marginLeft: 40, float: \"left\" }}\r\n          >\r\n            <InputNumber\r\n              className=\"upload-price\"\r\n              size=\"large\"\r\n              defaultValue={0}\r\n              style={{ width: 250, marginRight: 20, marginLeft: 10 }}\r\n            ></InputNumber>\r\n          </Form.Item>\r\n          <Button\r\n            id=\"bill-button\"\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            primary\r\n            htmlType\r\n            style={{ marginRight: 20, marginLeft: 10, float: \"left\" }}\r\n          >\r\n            입찰 하기\r\n          </Button>\r\n        </Form>\r\n        <Button\r\n          id=\"bill-button\"\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          danger\r\n          htmlType\r\n          onClick=\"\"\r\n          style={{ top: -3, marginLeft: 10 }}\r\n        >\r\n          즉시 구매\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Comment, Avatar, Form, Button, List, Input, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../config/constants.js\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst CommentList = ({ comments }) => (\r\n  <List\r\n    dataSource={comments}\r\n    header={`${comments.length} ${comments.length > 1 ? \"replies\" : \"reply\"}`}\r\n    itemLayout=\"horizontal\"\r\n    renderItem={(props) => <Comment {...props} />}\r\n  />\r\n);\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n  <>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        loading={submitting}\r\n        onClick={onSubmit}\r\n        type=\"primary\"\r\n      >\r\n        댓글 달기\r\n      </Button>\r\n    </Form.Item>\r\n  </>\r\n);\r\n\r\n// const deleteComment = (id2) => {\r\n//     axios\r\n//       .delete(`${API_URL}/product/${this.props.id}/reply/${id2}`, config)\r\n//       .then((result) => {\r\n//         message.info(\"삭제완료.\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//         message.error(`에러가 발생했습니다. ${error.message}`);\r\n//       });\r\n//   };\r\n\r\nconst config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    comments: this.props.comments,\r\n    submitting: false,\r\n    value: \"\",\r\n  };\r\n\r\n  \r\n  postComments = () => {\r\n    axios\r\n      .post(\r\n        `${API_URL}/product/${this.props.id}/reply`,\r\n        {\r\n          postId: this.props.id,\r\n          userId: this.props.user.id,\r\n          content:this.state.value,\r\n        },\r\n        config\r\n      )\r\n      .then((result) => {\r\n        console.log(\"댓글달기완료!!\");\r\n        console.log(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"댓글실패!!!!!\")\r\n        console.error(error);\r\n      });\r\n  }\r\n  \r\n\r\n  handleSubmit = () => {\r\n    console.log(this.props)\r\n    this.postComments()\r\n    this.setState({\r\n      submitting: true,\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      \r\n      this.setState({\r\n        submitting: false,\r\n        value: \"\",\r\n        comments: [\r\n          ...this.state.comments,\r\n          {\r\n            author: this.props.user.nickname,\r\n            avatar: `${this.props.user.profileImageUrl === \"/upload/public/avatar.png\" ? `${API_URL}/upload/public/avatar.png` : this.props.user.profileImageUrl }`,\r\n            content: <p>{this.state.value}{<Button onClick={() => this.props.deleteComment(this.id)}>삭제</Button>}</p>,\r\n            datetime: moment().fromNow(),\r\n          },\r\n        ],\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n \r\n\r\n  render() {\r\n    const { comments, submitting, value } = this.state;\r\n    return (\r\n      <>\r\n        \r\n        {comments.length > 0 && <CommentList comments={comments} />}\r\n        <Comment\r\n          \r\n          avatar={\r\n            <Avatar\r\n              src= {this.props.user.profileImageUrl === \"/upload/public/avatar.png\" ? `${API_URL}/upload/public/avatar.png` : this.props.user.profileImageUrl }\r\n              alt=\"Its Mine\"\r\n            />\r\n          }\r\n          content={\r\n            <Editor\r\n              onChange={this.handleChange}\r\n              onSubmit={this.handleSubmit}\r\n              submitting={submitting}\r\n              value={value}\r\n            />\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport dayjs from \"dayjs\";\r\nimport { Button, message, InputNumber, Form, Spin, Space } from \"antd\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BidPage from \"../auction/normal/bidPage\";\r\nimport Commnets from \"../comments/index\";\r\n\r\nimport { render } from \"@testing-library/react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction ProductPage() {\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n  const { id } = useParams();\r\n  const [userId, setuserId] = useState();\r\n  const [product, setProduct] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const getProduct = () => {\r\n    axios\r\n      .get(`${API_URL}/products/${id}`, config)\r\n      .then((result) => {\r\n        setProduct(result.data);\r\n        console.log(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러!\", error);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postId) => {\r\n    axios\r\n      .delete(`${API_URL}/post/${id}`, config)\r\n      .then((result) => {\r\n        alert(\"삭제완료\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n\r\n  useEffect(\r\n    function () {\r\n      let jwtTokenTemp = localStorage.getItem(\"Authorization\");\r\n\r\n      if (jwtTokenTemp === null) {\r\n        message.error(\"로그인 후 이용가능합니다!\");\r\n        history.push(\"/login\");\r\n      } else {\r\n        let jwtToken = jwtTokenTemp.replace(\"Bearer \", \"\");\r\n        getProduct();\r\n        setuserId(jwt_decode(jwtToken).id);\r\n      }\r\n\r\n      axios\r\n        .get(`${API_URL}/user-info`, config)\r\n        .then((result) => {\r\n          //실제 데이터로 변경\r\n          setUser(result.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"에러발생!!\", error);\r\n        });\r\n    },\r\n    [id, product]\r\n  );\r\n\r\n  if (product === null || user === null) {\r\n    return (\r\n      <div id=\"spin-spin\">\r\n        <Space size=\"middle\">\r\n          <Spin size=\"small\" />\r\n          <Spin />\r\n          <Spin size=\"large\" />\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const comments = product.replys.map((reply) => {\r\n    return {\r\n      author: reply.user.nickname,\r\n      avatar:\r\n        reply.user.profileImageUrl === \"/upload/public/avatar.png\"\r\n          ? `${API_URL}/upload/public/avatar.png`\r\n          : reply.user.profileImageUrl,\r\n      content: (\r\n        <p>\r\n          {reply.content}\r\n          {userId === reply.user.id ? (\r\n            <Button onClick={() => deleteComment(reply.id)}>삭제</Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </p>\r\n      ),\r\n      datetime: dayjs(reply.createDate).fromNow(),\r\n    };\r\n  });\r\n\r\n  comments.reverse();\r\n\r\n  const deleteComment = (id2) => {\r\n    axios\r\n      .delete(`${API_URL}/product/${id}/reply/${id2}`, config)\r\n      .then((result) => {\r\n        message.info(\"삭제완료.\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n\r\n  const onClickPurchase = () => {\r\n    axios\r\n      .post(\r\n        `${API_URL}/chat/newChat`,\r\n        { userId1: userId, userId2: product.user.id },\r\n        config\r\n      )\r\n      .then((result) => {\r\n        console.log(result.data);\r\n        history.replace(`/chatpage/${result.data}`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Carousel id=\"carousel\" fade>\r\n        {product.photos.map((photo) => {\r\n          return (\r\n            <Carousel.Item>\r\n              <img\r\n                height=\"500px\"\r\n                className=\"d-block w-100\"\r\n                src={API_URL + photo.imageUrl}\r\n                alt=\"First slide\"\r\n              />\r\n            </Carousel.Item>\r\n          );\r\n        })}\r\n      </Carousel>\r\n\r\n      <div id=\"profile-box\">\r\n        <div>\r\n          <img src={process.env.PUBLIC_URL + \"/images/icons/avatar.png\"} />\r\n          <span>{product.user.nickname}</span>\r\n        </div>\r\n        {product.user.id === userId ? (\r\n          <div id=\"change-button\">\r\n            <Link to={\"/updateForm/\" + product.id}>\r\n              <Button id=\"change-button1\" size=\"middle\" type=\"primary\">\r\n                수정\r\n              </Button>\r\n            </Link>\r\n\r\n            <Button\r\n              size=\"middle\"\r\n              type=\"primary\"\r\n              danger\r\n              onClick={() => deletePost(product.id)}\r\n            >\r\n              삭제\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div id=\"contents-box\">\r\n        <div>\r\n          <div id=\"name\">{product.title}</div>\r\n          {product.type !== 1 ? (\r\n            <div id=\"price\">{product.price}원</div>\r\n          ) : (\r\n            <div id=\"price\">{product.bid}원</div>\r\n          )}\r\n          <div id=\"createdAt\">\r\n            {dayjs(product.createdAt).format(\"YYYY년 MM월 DD일\")}\r\n          </div>\r\n          {product.type === 1 ? (\r\n            <div>\r\n              <div>\r\n                <div id=\"auction-commit\">\r\n                  <BidPage product={product} userId={userId} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div>\r\n                <Button\r\n                  id=\"purchase-button\"\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  danger\r\n                  onClick={onClickPurchase}\r\n                  disabled={product.soldout === 1 ? true : false}\r\n                >\r\n                  재빨리 구매하기\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <br />\r\n          <br />\r\n          <div id=\"price\">상품 설명</div>\r\n          <pre id=\"description\">{product.description}</pre>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div>\r\n        <h1>추천 상품</h1>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          {products.map((product, index) => {\r\n            //return <ProductCard key={index} product={product} />;\r\n          })}\r\n        </div>\r\n      </div> */}\r\n      <Commnets\r\n        product={product}\r\n        id={id}\r\n        user={user}\r\n        comments={comments}\r\n        deleteComment={deleteComment}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","const LOGIN = \"LOGIN\";\r\nexport const login = () => ({ type: LOGIN });\r\nconst LOGOUT = \"LOGOUT\";\r\nexport const logout = () => ({ type: LOGOUT });\r\n\r\nconst initstate = {\r\n  isLogin: false,\r\n};\r\n\r\nconst reducer = (state = initstate, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return { isLogin: true };\r\n    case LOGOUT:\r\n      return { isLogin: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"../store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\n\r\nfunction LoginPage() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    axios\r\n      .post(`${API_URL}/login`, {\r\n        username: values.username,\r\n        password: values.password,\r\n      })\r\n      .then((res) => {\r\n        // 로컬 스토리지 저장\r\n        const contents = res.headers.authorization;\r\n        localStorage.setItem(\"Authorization\", contents);\r\n        console.log(localStorage.getItem(\"Authorization\"));\r\n        return res;\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data === \"ok\") {\r\n          // 로그인 상태 값 리덕스 저장\r\n          dispatch(login());\r\n          history.push(\"/\");\r\n        } else {\r\n          message.error(\"아이디 혹은 비번을 다시 입력하세요!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=utf-8\",\r\n    },\r\n  };\r\n\r\n  const responseGoogle = (response) => {\r\n    console.log(1, response);\r\n    axios\r\n      .post(`${API_URL}/oauth/jwt/google`, JSON.stringify(response), config)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(2, res.data);\r\n          localStorage.setItem(\"Authorization\", res.data);\r\n          dispatch(login());\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const responseKakao = (response) => {\r\n    console.log(1, response);\r\n    axios\r\n      .post(`${API_URL}/oauth/jwt/kakao`, JSON.stringify(response), config)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(2, res.data);\r\n          localStorage.setItem(\"Authorization\", res.data);\r\n          dispatch(login());\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"login-container\">\r\n      <img\r\n        id=\"logo\"\r\n        src={process.env.PUBLIC_URL + \"/images/icons/잇츠마인.png\"}\r\n        width=\"150\"\r\n      />\r\n      <Form\r\n        id=\"login-form\"\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"비밀번호를 입력해주세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item className=\"info-message\">\r\n          <Button\r\n            id=\"login-area\"\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            로그인\r\n          </Button>\r\n          회원이 아니신가요?{\" \"}\r\n          <Button\r\n            size=\"large\"\r\n            className=\"k-button3\"\r\n            onClick={function () {\r\n              history.push(\"/register\");\r\n            }}\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div id=\"social-login\">\r\n        <div className=\"social-area\">\r\n          <GoogleLogin\r\n            className=\"google-login-btn\"\r\n            clientId=\"174200957989-fh45d11ihpurgl9j65ea8dsjm5cannml.apps.googleusercontent.com\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          >\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoogleLogin\r\n          </GoogleLogin>\r\n        </div>\r\n        <div>\r\n          <KakaoLogin\r\n            className=\"kakao\"\r\n            token={\"1be9d08861ba0765ac05ea71c635e4a4\"}\r\n            onSuccess={responseKakao}\r\n            onFail={responseKakao}\r\n            getProfile={true}\r\n            render={({ onClick }) => {\r\n              return (\r\n                <a\r\n                  className=\"social-area\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    onClick();\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/images/icons/kakao.png\"}\r\n                  />\r\n                </a>\r\n              );\r\n            }}\r\n          ></KakaoLogin>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useCallback } from \"react\";\r\nimport { Form, Input, Checkbox, Button, message } from \"antd\";\r\nimport \"./index.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport axios from \"axios\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegistrationForm() {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const onFinish = (values) => {\r\n    axios\r\n      .post(`${API_URL}/join`, {\r\n        username: values.username,\r\n        email: values.email,\r\n        password: values.password,\r\n        confirm: values.confirm,\r\n        nickname: values.nickname,\r\n        phone: values.phone,\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n\r\n  const validatePassword = useCallback((_, value) => {\r\n    const regExp =\r\n      /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,16}$/;\r\n    if (!value) {\r\n      return Promise.reject(new Error(\"비밀번호는 필수 항목입니다.\"));\r\n    }\r\n    if (!regExp.test(value)) {\r\n      return Promise.reject(\r\n        new Error(\r\n          \"비밀번호는 8~16자이며 영문 소문자, 숫자, 특수문자를 모두 포함해야 합니다.\"\r\n        )\r\n      );\r\n    }\r\n    return Promise.resolve();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"register-contain\">\r\n      <img\r\n        id=\"logo\"\r\n        src={process.env.PUBLIC_URL + \"/images/icons/잇츠마인.png\"}\r\n        width=\"150\"\r\n      />\r\n      <Form\r\n        id=\"register-container\"\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: [\"zhejiang\", \"hangzhou\", \"xihu\"],\r\n          prefix: \"86\",\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          label=\"아이디\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"아이디를 입력해주세요.\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input className=\"register-input\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"이메일\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"이메일 형식이 아닙니다.\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"이메일을 입력해주세요.\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input className=\"register-input\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"패스워드\"\r\n          rules={[\r\n            {\r\n              validator: validatePassword,\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password className=\"register-input\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"패스워드 확인\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error(\"입력하신 비밀번호가 다릅니다.\")\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password className=\"register-input\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"nickname\"\r\n          label=\"닉네임\"\r\n          tooltip=\"별명\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"닉네임을 입력해주세요.\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input className=\"register-input\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"phone\"\r\n          label=\"전화번호\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"전화번호를 입력해주세요.\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input className=\"register-input\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  Button,\r\n  message,\r\n  InputNumber,\r\n  Form,\r\n  Spin,\r\n  Space,\r\n  Avatar,\r\n  Progress,\r\n  Image,\r\n  Card,\r\n  Divider,\r\n} from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  ShoppingCartOutlined,\r\n  SettingOutlined,\r\n  EditOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction MyPage() {\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(null);\r\n  const [percent, setPercent] = useState(70.5);\r\n  React.useEffect(function () {\r\n    axios\r\n      .get(`${API_URL}/user-info`, config)\r\n      .then((result) => {\r\n        console.log(result);\r\n        //실제 데이터로 변경\r\n        setUser(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n  }, []);\r\n\r\n  setTimeout(() => {\r\n    setPercent(36.5);\r\n  }, 3000);\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div id=\"spin-spin\">\r\n        <Space size=\"middle\">\r\n          <Spin size=\"small\" />\r\n          <Spin />\r\n          <Spin size=\"large\" />\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"profile-container\">\r\n        <Card\r\n          id=\"profile-card\"\r\n          style={{\r\n            width: 400,\r\n            alignItems: \"center\",\r\n          }}\r\n          actions={[\r\n            <EditOutlined\r\n              onClick={function () {\r\n                history.push(\"/mypageupdate\");\r\n              }}\r\n              key=\"edit\"\r\n            />,\r\n            <EllipsisOutlined key=\"ellipsis\" />,\r\n          ]}\r\n        >\r\n          {user.profileImageUrl.startsWith(\"/\") ? (\r\n            user.profileImageUrl == \"/\" ? (\r\n              <div id=\"upload-profile-placeholder\">\r\n                <img src=\"/images/icons/camera.png\"></img>\r\n              </div>\r\n            ) : (\r\n              <Image\r\n                id=\"upload-profile\"\r\n                width={300}\r\n                src={`${API_URL}${user.profileImageUrl}`}\r\n              />\r\n            )\r\n          ) : user.profileImageUrl ? (\r\n            <Image width={300} src={`${user.profileImageUrl}`} />\r\n          ) : (\r\n            <div id=\"upload-profile-placeholder\">\r\n              <img src=\"/images/icons/camera.png\"></img>\r\n            </div>\r\n          )}\r\n          <Meta title={user.nickname} description={user.email} />\r\n          <div id=\"\">\r\n            <p>\r\n              <Progress\r\n                strokeColor={{\r\n                  \"0%\": \"#108ee9\",\r\n                  \"100%\": \"#10eee9\",\r\n                }}\r\n                percent={percent}\r\n                format={(percent) => `${percent}℃`}\r\n              />\r\n            </p>\r\n          </div>\r\n        </Card>\r\n        <div id=\"profile-description\">\r\n          <div>\r\n            <Button\r\n              id=\"my-location\"\r\n              size=\"large\"\r\n              onClick={function () {\r\n                history.push(\"/kakaomap\");\r\n              }}\r\n            >\r\n              내 동네 설정하기\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              id=\"my-location\"\r\n              onClick={function () {\r\n                history.push(\"/myproduct\");\r\n              }}\r\n            >\r\n              일반상품 거래내역\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPage;\r\n","import { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport {\r\n  Button,\r\n  message,\r\n  InputNumber,\r\n  Form,\r\n  Spin,\r\n  Space,\r\n  Avatar,\r\n  Progress,\r\n  Upload,\r\n  Input,\r\n} from \"antd\";\r\n\r\nfunction MyPageupdateForm() {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n\r\n  React.useEffect(function () {\r\n    axios\r\n      .get(`${API_URL}/user-info`, config)\r\n      .then((result) => {\r\n        console.log(result);\r\n        //실제 데이터로 변경\r\n\r\n        setUser(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(localStorage.getItem(\"Authorization\"));\r\n    var nickname = values.nickname;\r\n    var email = values.email;\r\n    if (nickname == null) {\r\n      nickname = user.nickname;\r\n    }\r\n    if (email == null) {\r\n      email = user.email;\r\n    }\r\n    axios\r\n      .post(\r\n        `${API_URL}/user-update`,\r\n        {\r\n          nickname: nickname,\r\n          email: email,\r\n          imageUrl: imageUrl,\r\n        },\r\n        config\r\n      )\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/mypage\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n  const onChangeImage = (info) => {\r\n    console.log(info.file.status);\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      const imageUrl = info.file.response;\r\n      user.profileImageUrl = imageUrl;\r\n      setImageUrl(imageUrl);\r\n    }\r\n  };\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div id=\"spin-spin\">\r\n        <Space size=\"middle\">\r\n          <Spin size=\"small\" />\r\n          <Spin />\r\n          <Spin size=\"large\" />\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form id=\"profile-update\" name=\"프로필 편집\" onFinish={onSubmit}>\r\n        <Form.Item name=\"upload\">\r\n          <Upload\r\n            name=\"image\"\r\n            action={`${API_URL}/image/profile`}\r\n            listType=\"picture\"\r\n            showUploadList={false}\r\n            onChange={onChangeImage}\r\n          >\r\n            {user.profileImageUrl.startsWith(\"/\") ? (\r\n              user.profileImageUrl ? (\r\n                <img\r\n                  id=\"upload-profile\"\r\n                  src={`${API_URL}${user.profileImageUrl}`}\r\n                />\r\n              ) : (\r\n                <div id=\"upload-profile-placeholder\">\r\n                  <img src=\"/images/icons/camera.png\"></img>\r\n                  <span>이미지를 업로드해주세요.</span>\r\n                </div>\r\n              )\r\n            ) : user.profileImageUrl ? (\r\n              <img id=\"upload-profile\" src={`${user.profileImageUrl}`} />\r\n            ) : (\r\n              <div id=\"upload-profile-placeholder\">\r\n                <img src=\"/images/icons/camera.png\"></img>\r\n                <span>이미지를 업로드해주세요.</span>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item name=\"nickname\">\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"닉네임을 입력해주세요.\"\r\n            defaultValue={`${user.nickname}`}\r\n          ></Input>\r\n        </Form.Item>\r\n        <Form.Item name=\"email\">\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"이메일을 입력해주세요.\"\r\n            defaultValue={`${user.email}`}\r\n          ></Input>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit\" type=\"primary\" size=\"large\" htmlType>\r\n            프로필 저장\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPageupdateForm;\r\n","/*global kakao*/ \r\nimport React, { useEffect } from 'react'\r\nconst Kakaomap=()=>{\r\n\r\n  useEffect(()=>{\r\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n    mapOption = { \r\n        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n        level: 1 // 지도의 확대 레벨 \r\n    }; \r\n\r\nvar map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n\r\n// HTML5의 geolocation으로 사용할 수 있는지 확인합니다 \r\nif (navigator.geolocation) {\r\n    \r\n    // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n    navigator.geolocation.getCurrentPosition(function(position) {\r\n        \r\n        var lat = position.coords.latitude, // 위도\r\n            lon = position.coords.longitude; // 경도\r\n        \r\n        var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n            message = '<div style=\"padding:5px;\">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다\r\n        \r\n        // 마커와 인포윈도우를 표시합니다\r\n        displayMarker(locPosition, message);\r\n            \r\n      });\r\n    \r\n} else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n    \r\n    var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),    \r\n        message = 'geolocation을 사용할수 없어요..'\r\n        \r\n    displayMarker(locPosition, message);\r\n}\r\n\r\n// 지도에 마커와 인포윈도우를 표시하는 함수입니다\r\nfunction displayMarker(locPosition, message) {\r\n\r\n    // 마커를 생성합니다\r\n    var marker = new kakao.maps.Marker({  \r\n        map: map, \r\n        position: locPosition\r\n    }); \r\n    \r\n    var iwContent = message, // 인포윈도우에 표시할 내용\r\n        iwRemoveable = true;\r\n\r\n    // 인포윈도우를 생성합니다\r\n    var infowindow = new kakao.maps.InfoWindow({\r\n        content : iwContent,\r\n        removable : iwRemoveable\r\n    });\r\n    \r\n    // 인포윈도우를 마커위에 표시합니다 \r\n    infowindow.open(map, marker);\r\n    \r\n    // 지도 중심좌표를 접속위치로 변경합니다\r\n    map.setCenter(locPosition);      \r\n}\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n        \t<div id=\"map\" style={{width:\"1023px\", height:\"700px\"}}></div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Kakaomap;","import \"./index.css\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport { API_URL } from \"../config/constants.js\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  message,\r\n  InputNumber,\r\n  Form,\r\n  Spin,\r\n  Space,\r\n  Avatar,\r\n  Progress,\r\n} from \"antd\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nfunction Myproduct() {\r\n  const [products, setProducts] = React.useState([]);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n\r\n  React.useEffect(function () {\r\n    axios\r\n      .get(`${API_URL}/products`)\r\n      .then((result) => {\r\n        console.log(result);\r\n        const contents = result.data.content;\r\n        setProducts(contents);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n\r\n    axios\r\n      .get(`${API_URL}/user-info`, config)\r\n      .then((result) => {\r\n        console.log(result);\r\n        //실제 데이터로 변경\r\n        setUser(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n  }, []);\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div id=\"spin-spin\">\r\n        <Space size=\"middle\">\r\n          <Spin size=\"small\" />\r\n          <Spin />\r\n          <Spin size=\"large\" />\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"product-headline\">판매내역</h1>\r\n      <div id=\"product-list\">\r\n        {products.map(function (product, index) {\r\n          if (product.user.id === user.id) {\r\n            return (\r\n              <div className=\"product-card\">\r\n                {product.soldout === 1 && <div className=\"product-blur\" />}\r\n                <Link className=\"product-link\" to={`/products/${product.id}`}>\r\n                  <div>\r\n                    <img\r\n                      className=\"product-img\"\r\n                      src={`${API_URL}${product.photos[0].imageUrl}`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"product-contents\">\r\n                    <span className=\"product-name\">\r\n                      <span>{product.title}</span>\r\n                    </span>\r\n                    <span className=\"product-price\">\r\n                      {product.type === 0 ? (\r\n                        <span>{product.price}원</span>\r\n                      ) : (\r\n                        <span>{product.bid}원</span>\r\n                      )}\r\n                    </span>\r\n                    <div className=\"product-footer\">\r\n                      <div className=\"product-seller\">\r\n                        <img\r\n                          className=\"product-avatar\"\r\n                          src=\"images/icons/avatar.png\"\r\n                        />\r\n                        <span>{product.user.nickname}</span>\r\n                      </div>\r\n                      <span className=\"product-date\">\r\n                        {dayjs(product.createDate).fromNow()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Myproduct;\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport { Spin, Space } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction UpdateForm() {\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [imageUrl2, setImageUrl2] = useState(null);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/products/${id}`, config)\r\n      .then((result) => {\r\n        console.log(result);\r\n        setProduct(result.data);\r\n        setImageUrl(result.data.imageUrl);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러!\", error);\r\n      });\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .put(\r\n        `${API_URL}/post/${id}`,\r\n        {\r\n          title: values.title,\r\n          description: values.description,\r\n          price: parseInt(values.price),\r\n          imageUrl: imageUrl,\r\n        },\r\n        config\r\n      )\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n    axios\r\n      .post(`https://75bee61c1be4.ngrok.io/products`, {\r\n        title: values.title,\r\n        description: values.description,\r\n        price: parseInt(values.price),\r\n        imageUrl: imageUrl2,\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n  const onChangeImage = (info) => {\r\n    console.log(info.file.status);\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      const imageUrl = info.file.response;\r\n      setImageUrl(imageUrl);\r\n    }\r\n  };\r\n\r\n  const onChangeImage2 = (info) => {\r\n    console.log(info.file.status);\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      const response = info.file.response;\r\n      const imageUrl2 = response.imageUrl;\r\n      setImageUrl2(imageUrl2);\r\n    }\r\n  };\r\n\r\n  if (product === null) {\r\n    return (\r\n      <div id=\"spin-spin\">\r\n        <Space size=\"middle\">\r\n          <Spin size=\"small\" />\r\n          <Spin />\r\n          <Spin size=\"large\" />\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"upload-container\">\r\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\r\n        <Form.Item\r\n          name=\"upload\"\r\n          label={<div className=\"upload-label\">상품 사진</div>}\r\n        >\r\n          <Upload\r\n            name=\"image\"\r\n            action={`${API_URL}/image`}\r\n            listType=\"picture\"\r\n            showUploadList={false}\r\n            onChange={onChangeImage}\r\n          >\r\n            {imageUrl ? (\r\n              <img id=\"upload-img\" src={`${API_URL}${imageUrl}`} />\r\n            ) : (\r\n              <div id=\"upload-img-placeholder\">\r\n                <img src=\"/images/icons/camera.png\"></img>\r\n                <span>이미지를 업로드해주세요.</span>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n          <Upload\r\n            name=\"image\"\r\n            action={`https://75bee61c1be4.ngrok.io/image`}\r\n            listType=\"picture\"\r\n            showUploadList={false}\r\n            onChange={onChangeImage2}\r\n          >\r\n            {imageUrl2 ? (\r\n              <img\r\n                id=\"upload-img\"\r\n                src={`https://75bee61c1be4.ngrok.io/${imageUrl2}`}\r\n              />\r\n            ) : (\r\n              <div id=\"upload-img-placeholder\">\r\n                <img src=\"/images/icons/camera.png\"></img>\r\n                <span>이미지를 업로드해주세요.</span>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"title\"\r\n          label={<div className=\"upload-label\">상품 이름</div>}\r\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요.\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            defaultValue={`${product.title}`}\r\n          ></Input>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"price\"\r\n          label={<div className=\"upload-label\">상품 가격</div>}\r\n          rules={[{ required: true, message: \"상품 가격을 입력해주세요\" }]}\r\n        >\r\n          <InputNumber\r\n            className=\"upload-price\"\r\n            size=\"large\"\r\n            defaultValue={`${product.price}`}\r\n          ></InputNumber>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"description\"\r\n          label={<div className=\"upload-label\">상품 소개</div>}\r\n          rules={[{ required: true, message: \"상품 소개를 입력해주세요.\" }]}\r\n        >\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            id=\"product-description\"\r\n            showCount\r\n            maxLength={300}\r\n            placeholder=\"상품 소개를 적어주세요.\"\r\n            defaultValue={`${product.description}`}\r\n          ></Input.TextArea>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit-button\" size=\"large\" htmlType>\r\n            상품 업로드\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateForm;\r\n","import { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport { Spin, Space, Form, Button, Input } from \"antd\";\r\nimport {} from \"react-bootstrap\";\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\n\r\nvar chatroomid;\r\nvar opponentUserName;\r\nvar stompClient = null;\r\nvar sender;\r\n\r\nconst connect = (values) => {\r\n  disconnect();\r\n  var socket = new SockJS(\"/talk\");\r\n  stompClient = Stomp.over(socket);\r\n  chatroomid = values.chatroomid;\r\n  opponentUserName = values.opponentUserName;\r\n  sender = values.sender;\r\n  stompClient.connect({}, function () {\r\n    stompClient.subscribe(\"/topic/\" + sender, function (e) {\r\n      showMessageLeft(JSON.parse(e.body));\r\n      console.log(\"새로운 메세지가 왔습니다.\");\r\n    });\r\n  });\r\n};\r\n\r\nconst onClickPurchase = (values) => {\r\n  var data = {\r\n    chatRoomId: chatroomid,\r\n    sender: sender,\r\n    receiver: opponentUserName,\r\n    message: values.message,\r\n  };\r\n  stompClient.send(\"/app/talk/send\", {}, JSON.stringify(data));\r\n  showMessageRight(data);\r\n};\r\n\r\nfunction disconnect() {\r\n  if (stompClient !== null) {\r\n    stompClient.disconnect();\r\n  }\r\n}\r\n\r\nvar space;\r\nfunction showMessageLeft(e) {\r\n  space = document.getElementById(\"chat-content\");\r\n  let receivedBox = document.createElement(\"div\");\r\n  receivedBox.innerHTML = `<li><span class=\"chat-box\">${e.sender}:${e.message}</span></li>`;\r\n  space.append(receivedBox);\r\n\r\n  space.scrollTop = space.scrollHeight;\r\n}\r\nfunction showMessageRight(e) {\r\n  space = document.getElementById(\"chat-content\");\r\n  let receivedBox = document.createElement(\"div\");\r\n  receivedBox.innerHTML = `<li><span class=\"chat-box mine\">${e.sender}: ${e.message}</span></li>`;\r\n  space.append(receivedBox);\r\n  space.scrollTop = space.scrollHeight;\r\n}\r\n\r\nwindow.onbeforeunload = function (e) {\r\n  disconnect();\r\n};\r\nfunction ChatPage() {\r\n  const config = {\r\n    headers: { Authorization: localStorage.getItem(\"Authorization\") },\r\n  };\r\n\r\n  const [user, setUser] = useState();\r\n  const [chats, setChat] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  React.useEffect(function () {\r\n    axios\r\n      .get(`${API_URL}/user-info`, config)\r\n      .then((result) => {\r\n        console.log(result);\r\n        //실제 데이터로 변경\r\n        setUser(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n\r\n    axios\r\n      .get(`${API_URL}/chat-list`, config)\r\n      .then((result) => {\r\n        console.log(result.data);\r\n        setChat(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n  }, []);\r\n\r\n  const chatRoom = (e) => {\r\n    console.log(\"chatRoom 실행\");\r\n    var a1 = Number(e.target.getAttribute(\"data-msg1\"));\r\n    var a2 = e.target.getAttribute(\"data-msg2\");\r\n    var a3 = e.target.getAttribute(\"data-msg3\");\r\n    console.log(a1, a2, a3);\r\n    var data = {\r\n      chatroomid: a1,\r\n      opponentUserName: a2,\r\n      sender: a3,\r\n    };\r\n    connect(data);\r\n    axios\r\n      .get(`${API_URL}/chat/${chatroomid}`, config)\r\n      .then((result) => {\r\n        console.log(result.data.messages);\r\n        //실제 데이터로 변경\r\n        setMessages(result.data.messages);\r\n\r\n        var div = document.querySelector(\"div\"); //제거하고자 하는 엘리먼트\r\n        var content = document.getElementById(\"chat-content\"); // 그 엘리먼트의 부모 객체\r\n        content.removeChild(div);\r\n\r\n        var objDiv = document.getElementById(\"chat-content\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러발생!!\", error);\r\n      });\r\n    return true;\r\n  };\r\n\r\n  if (messages === null) {\r\n    return (\r\n      <div id=\"spin-spin\">\r\n        <Space size=\"middle\">\r\n          <Spin size=\"small\" />\r\n          <Spin />\r\n          <Spin size=\"large\" />\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div class=\"container p-4 detail\">\r\n        <div class=\"row\">\r\n          <div class=\"col-3 p-0\">\r\n            {chats.map((chat) => {\r\n              console.log(chat);\r\n              return (\r\n                <button\r\n                  data-msg1={`${chat.chatRoomId}`}\r\n                  data-msg2={`${chat.opponentUserName}`}\r\n                  data-msg3={`${user.nickname}`}\r\n                  onClick={chatRoom}\r\n                >\r\n                  {chat.opponentUserName} 님과의채팅\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n          <div class=\"col-9 p-0\">\r\n            <div class=\"chat-room\">\r\n              <ul class=\"list-group chat-content\" id=\"chat-content\">\r\n                {messages\r\n                  .map((msg) => {\r\n                    return msg.writer.id === user.id ? (\r\n                      <li>\r\n                        <span class=\"chat-box mine\">{msg.message}</span>\r\n                      </li>\r\n                    ) : (\r\n                      <li>\r\n                        <span class=\"chat-box\">{msg.message}</span>\r\n                      </li>\r\n                    );\r\n                  })\r\n                  .reverse()}\r\n              </ul>\r\n              <div class=\"input-group\">\r\n                <Form onFinish={onClickPurchase}>\r\n                  <Form.Item name=\"message\">\r\n                    <Input\r\n                      className=\"upload-name\"\r\n                      size=\"large\"\r\n                      placeholder=\"메세지를 입력해주세요.\"\r\n                    ></Input>\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button id=\"submit\" type=\"primary\" size=\"large\" htmlType>\r\n                      전송\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport MainPageComponent from \"./main/index.js\";\r\nimport UploadPage from \"./upload\";\r\nimport AuctionUpload from \"./auctionupload\";\r\nimport ProductPage from \"./product\";\r\nimport LoginPage from \"./login/index\";\r\nimport RegisterPage from \"./register/index\";\r\nimport MyPage from \"./mypage/index\";\r\nimport MypageUpdatePage from \"./mypageUpdate\";\r\nimport Kakaomap from \"./kakaomap/kakao\";\r\nimport Myproduct from \"./myproduct/index\";\r\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\r\nimport { Button, Affix, Menu, Dropdown, message } from \"antd\";\r\nimport {\r\n  CarOutlined,\r\n  ThunderboltOutlined,\r\n  CameraOutlined,\r\n  HeartOutlined,\r\n  SkinOutlined,\r\n  LaptopOutlined,\r\n  DownOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { login, logout } from \"./store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UpdateForm from \"./updateForm\";\r\nimport ChatPage from \"./chat\";\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n\r\n  React.useEffect(() => {\r\n    let jwtToken = localStorage.getItem(\"Authorization\");\r\n    if (jwtToken !== null) {\r\n      dispatch(login());\r\n    }\r\n  }, []);\r\n\r\n  const upload = function () {\r\n    if (!isLogin) {\r\n      message.error(\"로그인 후 이용해 주세요!\");\r\n      history.push(\"/login\");\r\n    } else {\r\n      history.push(\"/upload\");\r\n    }\r\n  };\r\n\r\n  const auctionupload = () => {\r\n    if (!isLogin) {\r\n      message.error(\"로그인 후 이용해 주세요!\");\r\n      history.push(\"/login\");\r\n    } else {\r\n      history.push(\"/auctionupload\");\r\n    }\r\n  };\r\n\r\n  const logoutProc = () => {\r\n    localStorage.removeItem(\"Authorization\");\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const mypageProc = () => {\r\n    history.push(\"/mypage\");\r\n  };\r\n\r\n  const chatpageProc = () => {\r\n    history.push(\"/chatpage\");\r\n  };\r\n\r\n  //\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item icon={<SkinOutlined />} key=\"1\">\r\n        의류\r\n      </Menu.Item>\r\n      <Menu.Item icon={<HeartOutlined />} key=\"1\">\r\n        신발,가방,잡화\r\n      </Menu.Item>\r\n      <Menu.Item icon={<LaptopOutlined />} key=\"1\">\r\n        컴퓨터,주변기기\r\n      </Menu.Item>\r\n      <Menu.Item icon={<CameraOutlined />} key=\"1\">\r\n        카메라\r\n      </Menu.Item>\r\n      <Menu.Item icon={<ThunderboltOutlined />} key=\"1\">\r\n        디지털,가전\r\n      </Menu.Item>\r\n      <Menu.Item icon={<CarOutlined />} key=\"1\">\r\n        자동차\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  const menu2 = (\r\n    <Menu>\r\n      <Menu.Item onClick={upload} key=\"1\" icon={<PlusOutlined />}>\r\n        일반상품\r\n      </Menu.Item>\r\n      <Menu.Item onClick={auctionupload} key=\"2\" icon={<PlusOutlined />}>\r\n        경매상품\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const menu3 = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <a onClick={mypageProc}>내정보</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={chatpageProc}>1:1 채팅</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Affix offsetTop={0}>\r\n        <div id=\"header\">\r\n          <div id=\"header-area\">\r\n            <Link to=\"/\">\r\n              <img\r\n                id=\"logo\"\r\n                src={process.env.PUBLIC_URL + \"/images/icons/잇츠마인.png\"}\r\n                width=\"\"\r\n              />\r\n            </Link>\r\n            {isLogin ? (\r\n              <>\r\n                <div>\r\n                  <Dropdown overlay={menu3} placement=\"bottomLeft\" arrow>\r\n                    <Button size=\"large\" className=\"k-button3\">\r\n                      <img\r\n                        id=\"profile\"\r\n                        src={\r\n                          process.env.PUBLIC_URL + \"/images/icons/avatar.png\"\r\n                        }\r\n                      />\r\n                      내정보\r\n                    </Button>\r\n                  </Dropdown>\r\n                  <Button\r\n                    size=\"large\"\r\n                    onClick={logoutProc}\r\n                    className=\"k-button3\"\r\n                  >\r\n                    로그아웃\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div>\r\n                  <Button\r\n                    className=\"k-button3\"\r\n                    size=\"large\"\r\n                    onClick={function () {\r\n                      history.push(\"/login\");\r\n                    }}\r\n                  >\r\n                    로그인\r\n                  </Button>\r\n\r\n                  <Button\r\n                    size=\"large\"\r\n                    className=\"k-button3\"\r\n                    onClick={function () {\r\n                      history.push(\"/register\");\r\n                    }}\r\n                  >\r\n                    회원가입\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"header-cat\">\r\n          <div id=\"header-area-cat\">\r\n            <>\r\n              <div>\r\n                <Dropdown overlay={menu}>\r\n                  <Button\r\n                    className=\"k-button2\"\r\n                    size=\"large\"\r\n                    icon={<DownOutlined />}\r\n                  >\r\n                    카테고리\r\n                  </Button>\r\n                </Dropdown>\r\n              </div>\r\n            </>\r\n            <>\r\n              <Dropdown overlay={menu2}>\r\n                <Button\r\n                  className=\"k-button\"\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  상품 업로드\r\n                </Button>\r\n              </Dropdown>\r\n            </>\r\n          </div>\r\n        </div>\r\n      </Affix>\r\n\r\n      <div id=\"body\">\r\n        <Switch>\r\n          <Route exact={true} path=\"/\">\r\n            <MainPageComponent />\r\n          </Route>\r\n          <Route exact={true} path=\"/products/:id\">\r\n            <ProductPage />\r\n          </Route>\r\n          <Route exact={true} path=\"/upload\">\r\n            <UploadPage />\r\n          </Route>\r\n          <Route exact={true} path=\"/auctionupload\">\r\n            <AuctionUpload />\r\n          </Route>\r\n          <Route exact={true} path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route exact={true} path=\"/register\">\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route exact={true} path=\"/mypage\">\r\n            <MyPage />\r\n          </Route>\r\n          <Route exact={true} path=\"/kakaomap\">\r\n            <Kakaomap />\r\n          </Route>\r\n          <Route exact={true} path=\"/mypageupdate\">\r\n            <MypageUpdatePage />\r\n          </Route>\r\n          <Route exact={true} path=\"/myproduct\">\r\n            <Myproduct />\r\n          </Route>\r\n          <Route exact={true} path=\"/updateForm/:id\">\r\n            <UpdateForm />\r\n          </Route>\r\n          <Route exact={true} path=\"/chatpage/:id?\">\r\n            <ChatPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      <div id=\"footer\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./store\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}